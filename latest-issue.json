[{"body":"\nThis challenge focuses on creating a visually appealing card with a subtle 3D effect using only CSS.  We'll achieve this using box-shadow and subtle transformations to give the illusion of depth. No JavaScript is required.  The style will be clean and modern, suitable for a portfolio item or feature card.\n\n\n## Styling Description:\n\nThe card will have a clean, minimalist design.  It will feature:\n\n* A slightly raised effect achieved using `box-shadow`.\n* Rounded corners (`border-radius`).\n* A subtle inner shadow to further enhance the 3D effect.\n* A gradient background for added visual interest.\n* Consistent padding and margins for visual balance.\n* Responsive design to adapt to different screen sizes.\n\n\n## Full Code (CSS):\n\n```css\n.card {\n  width: 300px;\n  background: linear-gradient(to right, #4CAF50, #81C784); /* Green gradient */\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2); /* Outer shadow */\n  padding: 20px;\n  margin: 20px auto;\n  color: white;\n  text-align: center;\n  overflow: hidden; /* Prevents content overflow from disrupting the shadow */\n}\n\n.card::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.1);\n  z-index: -1; /* Behind the card content */\n  transform: translate3d(-2px, -2px, 0) skew(0.1deg); /* Subtle inner shadow */\n  border-radius: inherit; /* Inherits the card's border-radius */\n}\n\n.card h2 {\n  margin-bottom: 10px;\n}\n\n.card p {\n  margin-bottom: 10px;\n  font-size: 16px;\n}\n\n/* Responsive adjustments (optional) */\n@media (max-width: 350px) {\n  .card {\n    width: 90%;\n  }\n}\n```\n\n## HTML Structure (Example):\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>CSS 3D Card</title>\n  <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n  <div class=\"card\">\n    <h2>My Awesome Card</h2>\n    <p>This is a sample text for the card.  You can customize this content as needed.</p>\n  </div>\n</body>\n</html>\n```\n\n\n## Explanation:\n\n* **`box-shadow`:** Creates the outer shadow, giving the card a raised appearance.  The values (`5px 5px 10px rgba(0, 0, 0, 0.2)`) control the horizontal offset, vertical offset, blur radius, and color/opacity respectively.\n* **`border-radius`:** Rounds the corners of the card for a softer look.\n* **`::before` pseudo-element:** This is a clever trick to create the inner shadow.  By positioning a pseudo-element behind the card and applying a slight transformation and background color, we achieve a convincing inner shadow effect.\n* **`transform: translate3d(-2px, -2px, 0) skew(0.1deg);`:**  The `translate3d` shifts the inner shadow slightly, and the `skew` adds a minuscule skew for a more complex effect.  This is crucial for the 3D illusion.\n* **Responsive adjustments:** The media query ensures the card scales appropriately on smaller screens.\n\n\n## Resources to Learn More:\n\n* **MDN Web Docs CSS Reference:** [https://developer.mozilla.org/en-US/docs/Web/CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) –  An excellent resource for learning CSS properties and selectors.\n* **CSS-Tricks:** [https://css-tricks.com/](https://css-tricks.com/) –  A popular website with many CSS tutorials and articles.\n* **freeCodeCamp:** [https://www.freecodecamp.org/](https://www.freecodecamp.org/) - Offers interactive CSS learning paths.\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2960,"title":"CSS Challenge:  Creating a 3D-like Card with CSS"}]
