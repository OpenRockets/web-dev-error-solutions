[{"body":"\nThis challenge involves creating an animated loading button using CSS gradients and keyframes. The button will smoothly transition from a static state to a loading state, displaying a spinning gradient circle within the button.  We'll use CSS3 for this implementation.\n\n**Description of the Styling:**\n\nThe button will be rectangular with rounded corners. In its default state, it will have a solid background color.  Upon clicking (or simulating a loading state), a circular gradient will appear and animate within the button.  The gradient itself will be a vibrant color scheme.  The text within the button will change to indicate loading.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Animated Gradient Loading Button</title>\n<style>\n.button {\n  background-color: #4CAF50; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 8px;\n  transition: background-color 0.3s ease;\n  position: relative;\n  overflow: hidden; /* Hide the spinner initially */\n}\n\n.button:hover {\n  background-color: #3e8e41; /* Darker green on hover */\n}\n\n.button.loading {\n  background-color: transparent; /* Make background transparent during loading */\n  cursor: wait; /* Indicate that the button is busy */\n}\n\n.button.loading::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  border: 4px solid #4CAF50; /* Green border for spinner */\n  border-color: #4CAF50 transparent #4CAF50 transparent; /* Gradient effect */\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: translate(-50%, -50%) rotate(0deg); }\n  100% { transform: translate(-50%, -50%) rotate(360deg); }\n}\n\n.button span {\n  transition: opacity 0.3s ease;\n}\n\n.button.loading span {\n  opacity: 0; /* Fade out text during loading */\n}\n\n\n</style>\n</head>\n<body>\n\n<button class=\"button\" onclick=\"this.classList.toggle('loading');\">\n  <span>Click Me</span>\n</button>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **Base Button Styling:**  Sets up the initial button appearance (color, padding, etc.).\n* **Hover Effect:** Changes the background color on hover.\n* **Loading Class:**  This class is added to the button when clicked. It makes the background transparent and adds a loading cursor.\n* **Pseudo-element `::before`:** This creates the spinning circle using a pseudo-element. The `border-color` property with transparent values creates the gradient effect.\n* **`@keyframes spin`:** Defines the animation for the spinning circle.\n* **Text Fade:** The `span` element containing the button text fades out during loading.\n\n**Resources to Learn More:**\n\n* **MDN Web Docs CSS Keyframes:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Keyframes](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Keyframes)\n* **MDN Web Docs CSS Pseudo-elements:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS-Tricks (General CSS Learning):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1815,"title":"CSS Challenge:  Animated Gradient Loading Button"}]
