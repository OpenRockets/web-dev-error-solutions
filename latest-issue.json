[{"body":"\nThis challenge focuses on creating an animated circular progress bar using pure CSS.  We'll leverage CSS animations and transformations to achieve a visually appealing and smooth progress indicator.  No JavaScript is required!\n\n\n## Description of the Styling\n\nThe goal is to create a circular progress bar that visually represents a percentage. The bar should fill up from 0% to a specified percentage, animating the fill smoothly.  The styling will include:\n\n* A circular base (the background track).\n* A circular overlay (the progress indicator) that animates its stroke-dashoffset to represent the percentage.\n* Customizable colors for the base and progress.\n* Clean and semantic HTML structure.\n\n\n## Full Code (CSS Only)\n\n```css\n/* Base styles */\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  position: relative;\n}\n\n.progress-ring svg {\n  transform: rotate(-90deg); /* Start the animation from the top */\n}\n\n.progress-ring circle {\n  fill: transparent;\n  stroke-width: 10;\n  stroke-linecap: round;\n  /* Stroke dasharray and dashoffset to control animation */\n  stroke-dasharray: 471.2388980384689; /* Circumference of the circle */\n}\n\n.progress-ring .progress-background {\n  stroke: #ddd; /* Background color of the ring */\n}\n\n.progress-ring .progress-foreground {\n  stroke: #4CAF50; /* Progress bar color */\n  stroke-dashoffset: 471.2388980384689; /* Initially, fully hidden */\n  animation: progress-animation 2s linear forwards; /* Animation */\n}\n\n/* Keyframes for the animation */\n@keyframes progress-animation {\n  to {\n    stroke-dashoffset: 0; /* Animate to 0 to show the progress */\n  }\n}\n\n/*  To control percentage, update CSS variable --progress */\n:root {\n  --progress: 75; /* Adjust this value to change progress percentage */\n}\n\n.progress-ring .progress-foreground {\n  stroke-dashoffset: calc(471.2388980384689 * (1 - var(--progress) / 100));\n}\n\n\n```\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Circular Progress Bar</title>\n<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\n<div class=\"progress-ring\">\n  <svg width=\"150\" height=\"150\">\n    <circle class=\"progress-background\" cx=\"75\" cy=\"75\" r=\"60\"/>\n    <circle class=\"progress-foreground\" cx=\"75\" cy=\"75\" r=\"60\"/>\n  </svg>\n</div>\n\n</body>\n</html>\n\n```\n\n## Explanation\n\nThe code uses an SVG to create the circles.  The `stroke-dasharray` property defines the total length of the circle's stroke, which we calculate as the circumference. `stroke-dashoffset` controls how much of the stroke is initially hidden.  The CSS animation smoothly reduces `stroke-dashoffset` to 0, revealing the progress bar. The `var(--progress)` custom property allows easy percentage adjustment.  Remember to adjust `stroke-dasharray` if you change the radius of the circle.\n\n\n## Links to Resources to Learn More\n\n* **CSS Animations:** [MDN Web Docs - CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n* **SVG in CSS:** [MDN Web Docs - SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n* **CSS Variables (Custom Properties):** [MDN Web Docs - CSS Variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2348,"title":"CSS Challenge:  Animated Circular Progress Bar"}]
