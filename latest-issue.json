[{"body":"\nThis challenge involves creating an animated circular progress bar using Tailwind CSS.  The bar will visually represent a percentage, smoothly filling the circle as the percentage increases.  We'll leverage Tailwind's utility classes for quick styling and CSS animations for the dynamic effect.\n\n\n## Description of the Styling\n\nThe progress bar will be a circle with a background color and a colored arc that represents the progress. The arc will animate, growing from 0% to the specified percentage.  We'll use Tailwind's `relative`, `overflow-hidden`, and `rounded-full` classes to create the circular shape and manage the animation's visibility. The animation itself will be a CSS keyframes animation controlling the stroke-dasharray and stroke-dashoffset properties of an SVG circle.\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Circular Progress Bar</title>\n<script src=\"https://cdn.tailwindcss.com\"></script>\n<style>\n  .progress-ring {\n    transform: rotate(-90deg); /* Start the animation from the top */\n  }\n  .progress-ring circle {\n    transition: stroke-dashoffset 0.5s linear; /* Smooth animation */\n  }\n  .progress-ring.animate {\n    animation: progress 0.5s linear forwards; /* Trigger the animation */\n  }\n  @keyframes progress {\n    to {\n      stroke-dashoffset: 0; /* Complete circle at the end */\n    }\n  }\n</style>\n</head>\n<body class=\"bg-gray-100\">\n\n<div class=\"container mx-auto p-8\">\n  <div class=\"flex justify-center items-center\">\n    <div class=\"w-48 h-48 relative\">\n      <svg class=\"progress-ring animate\" width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n        <circle class=\"stroke-gray-300 stroke-2\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" />\n        <circle class=\"stroke-blue-500 stroke-2\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\"\n                stroke-dasharray=\"251.327\" stroke-dashoffset=\"251.327\" stroke-linecap=\"round\"/>\n      </svg>\n      <div class=\"absolute inset-0 flex justify-center items-center text-lg font-medium\">\n        <span id=\"percentage\">75%</span>\n      </div>\n    </div>\n  </div>\n</div>\n<script>\n  const percentage = 75; // Change this value to adjust the progress\n  const circumference = 2 * Math.PI * 40;\n  const offset = circumference - (percentage/100) * circumference;\n  const circle = document.querySelector('.progress-ring circle:nth-child(2)');\n  circle.style.strokeDashoffset = offset;\n  document.getElementById('percentage').innerText = percentage + '%';\n\n\n</script>\n\n\n</body>\n</html>\n```\n\n## Explanation\n\n1. **HTML Structure:** We create a simple HTML structure using a `<div>` to center the progress bar.  An SVG `<circle>` element represents the progress bar itself, with two circles â€“ one for the background and one for the animated progress arc.  A `<span>` displays the percentage.\n\n\n2. **Tailwind CSS:** We use Tailwind classes for styling, like `bg-gray-100` (background color), `w-48 h-48` (size), and `rounded-full` (shape).\n\n\n3. **CSS Animation:**  The `progress` keyframes animation smoothly decreases `stroke-dashoffset` from the initial value (full circle) to 0, creating the filling animation.  `stroke-dasharray` is set to the circumference of the circle, allowing us to control the visible portion of the arc. `stroke-linecap=\"round\"` makes the ends of the arc rounded.\n\n\n4. **JavaScript (Optional):** The JavaScript part calculates the `stroke-dashoffset` based on the desired percentage and updates the percentage display.  You can easily modify the `percentage` variable to change the progress level.\n\n\n## Links to Resources to Learn More\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs/](https://tailwindcss.com/docs/)\n* **SVG Tutorial:** [https://developer.mozilla.org/en-US/docs/Web/SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n* **CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2247,"title":"CSS Challenge:  Animated Circular Progress Bar with Tailwind CSS"}]
