[{"body":"\nThis challenge focuses on creating a visually appealing loading button using CSS gradients and animations.  The button will smoothly transition from a static state to a loading state with a rotating gradient.  We'll achieve this using pure CSS, specifically leveraging CSS variables and animations.  While this example doesn't use a framework like Tailwind, the principles can be adapted easily.\n\n**Description of the Styling:**\n\nThe button will start as a rectangular button with a solid background color. On click, it transitions to a loading state.  The loading state features a circular gradient that smoothly rotates within the button's bounds.  We will use CSS variables to easily customize colors and animation speed.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Animated Gradient Loading Button</title>\n<style>\n  button {\n    --main-color: #4CAF50; /* Customizable main color */\n    --accent-color: #388E8E; /* Customizable accent color */\n    --animation-duration: 1.5s; /* Customizable animation duration */\n\n    background-color: var(--main-color);\n    color: white;\n    border: none;\n    padding: 15px 30px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* Smooth transition for click */\n    position: relative; /* For absolute positioning of the spinner */\n  }\n\n  button.loading {\n    background-color: var(--accent-color);\n    cursor: wait; /* Change cursor to wait while loading */\n  }\n\n  button::before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: linear-gradient(to right, var(--main-color), var(--accent-color));\n    animation: rotate 1.5s linear infinite; /* Rotate animation */\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: translate(-50%, -50%) rotate(360deg);\n    }\n  }\n\n  /* Hide the text during loading */\n  button.loading span {\n    visibility: hidden;\n  }\n\n</style>\n</head>\n<body>\n\n<button onclick=\"this.classList.toggle('loading');\">\n  <span>Click Me</span>\n</button>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **CSS Variables:**  Using `var(--main-color)` and `var(--accent-color)` allows for easy customization of the button's colors.\n* **`::before` Pseudo-element:** This creates the rotating spinner overlayed on the button.\n* **`@keyframes rotate`:** Defines the animation for the spinner.\n* **`transition` Property:** Provides a smooth color transition on click.\n* **`classList.toggle('loading')`:**  This JavaScript snippet adds/removes the 'loading' class on click, triggering the loading state.  This class changes the background color, adds a spinner, and hides the text content.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Variables:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **MDN Web Docs - CSS Gradients:** [https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient](https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1602,"title":"CSS Challenge:  Animated Gradient Loading Button"}]
