[{"body":"\nThis challenge involves creating a card that expands smoothly when hovered over, revealing additional content. We'll use CSS3 transitions and transforms to achieve this effect.  No JavaScript is required.\n\n\n## Description of the Styling\n\nThe card will start in a compact state. On hover, it will smoothly increase in height, revealing hidden content below.  The expansion will be accompanied by a subtle shadow effect to enhance the visual appeal. We'll also style the card with basic colors and typography.\n\n\n## Full Code (CSS Only)\n\n```css\n.card {\n  background-color: #f0f0f0;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Hide content initially */\n  transition: height 0.3s ease-in-out, box-shadow 0.3s ease-in-out; /* Smooth transition */\n  width: 300px;\n  height: 150px; /* Initial height */\n}\n\n.card:hover {\n  height: 300px; /* Expanded height */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Enhanced shadow on hover */\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.card-title {\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.card-text {\n  font-size: 1em;\n  line-height: 1.6;\n}\n\n.hidden-content {\n  opacity: 0;\n  transform: translateY(20px);\n  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n}\n\n.card:hover .hidden-content {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n```\n\nYou'll also need some HTML to structure the card:\n\n```html\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h2 class=\"card-title\">Card Title</h2>\n    <p class=\"card-text\">Some initial text.</p>\n    <p class=\"hidden-content\">This content is hidden initially and revealed on hover.</p>\n  </div>\n</div>\n```\n\n\n## Explanation\n\n* **`transition` property:** This smoothly animates the changes in `height` and `box-shadow` over 0.3 seconds using an ease-in-out timing function.\n* **`transform` property:**  Used to initially shift the hidden content offscreen and then bring it smoothly back in on hover.\n* **`opacity` property:**  Controls the visibility of the hidden content.\n* **`overflow: hidden;`:** Prevents the content from spilling out before the animation starts.\n* **`height` adjustments:** Control the card's initial and expanded heights.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks:** (Search for \"CSS animations\" or \"CSS transitions\" on their site for numerous tutorials)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2004,"title":"CSS Challenge:  Animated Expanding Card"}]
