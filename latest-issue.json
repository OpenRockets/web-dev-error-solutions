[{"body":"\nThis challenge focuses on creating a 3D rotating cube using CSS transforms and animations.  We'll leverage CSS3 properties to achieve this effect without any JavaScript.  The cube will be visually appealing and will smoothly rotate continuously.\n\n**Description of the Styling:**\n\nThe cube will be composed of six square faces, each with a different color.  These faces will be positioned to form a three-dimensional cube using `transform: rotateX`, `rotateY`, and `translateZ` properties.  A CSS animation will be used to continuously rotate the cube around its Y-axis.\n\n**Full Code (CSS only):**\n\n```css\n.container {\n  width: 200px;\n  height: 200px;\n  perspective: 800px; /* Adjust for 3D perspective */\n  position: relative;\n}\n\n.cube {\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  transform-style: preserve-3d; /* Essential for 3D rendering */\n  animation: rotate 10s linear infinite; /* Rotate continuously */\n}\n\n.face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  opacity: 0.9; /* Slightly transparent for depth effect */\n  background-size: cover;\n  backface-visibility: hidden; /* Prevent back faces from being visible */\n}\n\n.face-front {\n  background-color: #f00; /* Red */\n  transform: translateZ(50px);\n}\n\n.face-back {\n  background-color: #0f0; /* Green */\n  transform: translateZ(-50px) rotateY(180deg);\n}\n\n.face-top {\n  background-color: #00f; /* Blue */\n  transform: translateY(-50px) rotateX(90deg);\n}\n\n.face-bottom {\n  background-color: #ff0; /* Yellow */\n  transform: translateY(50px) rotateX(-90deg);\n}\n\n.face-left {\n  background-color: #f0f; /* Magenta */\n  transform: translateX(-50px) rotateY(-90deg);\n}\n\n.face-right {\n  background-color: #0ff; /* Cyan */\n  transform: translateX(50px) rotateY(90deg);\n}\n\n@keyframes rotate {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n\n/*  HTML Structure (example):*/\n<div class=\"container\">\n  <div class=\"cube\">\n    <div class=\"face face-front\"></div>\n    <div class=\"face face-back\"></div>\n    <div class=\"face face-top\"></div>\n    <div class=\"face face-bottom\"></div>\n    <div class=\"face face-left\"></div>\n    <div class=\"face face-right\"></div>\n  </div>\n</div>\n\n```\n\n**Explanation:**\n\n1.  **`perspective`:** This property on the container creates the 3D viewing space. Adjust the value to change the perspective.\n2.  **`transform-style: preserve-3d`:** This is crucial. It tells the browser to render the children in 3D space.\n3.  **`translateZ`:** This moves the faces along the z-axis to create depth.\n4.  **`rotateX`, `rotateY`:** These rotate the faces around the respective axes to position them correctly.\n5.  **`backface-visibility: hidden`:** This prevents the back faces from showing through.\n6.  **`@keyframes rotate`:**  This defines the animation that rotates the cube around the Y-axis.\n\n**Links to Resources to Learn More:**\n\n*   **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n*   **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n*   **CSS-Tricks - Understanding CSS Transforms:** [https://css-tricks.com/almanac/properties/t/transform/](https://css-tricks.com/almanac/properties/t/transform/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2066,"title":"CSS Challenge:  3D Rotating Cube"}]
