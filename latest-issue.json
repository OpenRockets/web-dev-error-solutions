[{"body":"\nThis challenge involves creating a visually appealing circular progress bar using only CSS. The progress bar will be centered on the page and display a percentage value within the circle.  We'll use CSS variables for easy customization.  This example utilizes standard CSS, but the concepts could easily be adapted to a framework like Tailwind CSS.\n\n\n## Description of the Styling:\n\nThe progress bar consists of a circular track and a circular fill. The fill's size represents the percentage.  We'll use `conic-gradient` for the circular fill, giving a smooth and visually pleasing progress indicator. The percentage is displayed in the center of the circle using a pseudo-element.  The styling aims for a clean, modern look, easily adaptable to different color schemes.\n\n## Full Code:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Circular Progress Bar</title>\n<style>\n  .progress-ring {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n  }\n\n  .progress-ring::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    border: 5px solid #ddd; /* Track color */\n    box-sizing: border-box;\n  }\n\n  .progress-ring::after {\n    content: attr(data-percentage)'%';\n    position: absolute;\n    font-size: 1.2em;\n    font-weight: bold;\n  }\n\n  .progress-ring.filled {\n      --progress: 75; /* Adjust this value to change the progress percentage */\n      --color: #007bff; /* Progress bar color */\n      \n      /* The magic - conic gradient creates the filled circle */\n      background: conic-gradient(\n          var(--color) var(--progress)%,\n          #ddd var(--progress)%\n      );\n  }\n\n</style>\n</head>\n<body>\n\n<div class=\"progress-ring filled\" data-percentage=\"75\"></div>\n\n</body>\n</html>\n```\n\n\n## Explanation:\n\n* **`progress-ring`**: This class sets the dimensions, shape, and centering of the progress bar.  `display: flex` and `justify-content/align-items` are used for easy centering.\n* **`::before` pseudo-element**: Creates the circular track.\n* **`::after` pseudo-element**: Displays the percentage value.  `attr(data-percentage)` accesses the data attribute from the main element.\n* **`filled` class**:  This class holds the magic: the `conic-gradient` function creates the circular fill. `var(--progress)` dynamically adjusts the fill's size based on the CSS variable. `var(--color)` controls the color of the filled section.\n* **CSS Variables**: `--progress` and `--color` make it easy to change the percentage and color.\n\n\n## Links to Resources to Learn More:\n\n* **CSS Gradients:**  [MDN Web Docs - CSS Gradients](https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient) (Look at the `conic-gradient` section)\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Variables (Custom Properties):** [MDN Web Docs - CSS Variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)\n\n## Adapting to Tailwind CSS:\n\nTo adapt this to Tailwind CSS, you would replace the custom CSS with Tailwind classes. For example, you could use `w-48 h-48` for size, `rounded-full` for border radius, and Tailwind's utility classes for colors and spacing.  The `conic-gradient` would still be needed as a custom CSS declaration within a `style` attribute or a separate CSS file.\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2345,"title":"CSS Challenge:  Centered Circular Progress Bar"}]
