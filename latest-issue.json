[{"body":"\nThis challenge focuses on creating a visually appealing multi-level nested list using CSS, specifically employing the accordion effect to reveal and hide sub-lists.  We'll use standard CSS for broader applicability.  Tailwind CSS could also be used to streamline the process, but the core concepts remain the same.\n\n**Description of the Styling:**\n\nThe goal is to create a nested list where each top-level list item acts as an accordion header. Clicking the header will reveal or hide its corresponding sub-list(s).  The styling should include clear visual cues to indicate expandable items, potentially using plus/minus icons or a subtle visual change upon expansion.  The nested lists should be indented appropriately for readability, and consistent styling should be maintained across all levels.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Nested List Accordion</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n\n.accordion-header {\n  cursor: pointer;\n  background-color: #f0f0f0;\n  padding: 10px;\n  border: 1px solid #ddd;\n}\n\n.accordion-header:hover {\n  background-color: #e0e0e0;\n}\n\n.accordion-content {\n  display: none;\n  padding: 10px;\n  border: 1px solid #ddd;\n  margin-left: 20px;\n}\n\n.accordion-content.show {\n  display: block;\n}\n</style>\n</head>\n<body>\n\n<h1>Nested List Example</h1>\n\n<ul>\n  <li>\n    <div class=\"accordion-header\">Item 1</div>\n    <ul class=\"accordion-content\">\n      <li>Sub-item 1.1</li>\n      <li>Sub-item 1.2</li>\n      <li>\n        <div class=\"accordion-header\">Sub-item 1.3</div>\n        <ul class=\"accordion-content\">\n          <li>Sub-sub-item 1.3.1</li>\n          <li>Sub-sub-item 1.3.2</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <div class=\"accordion-header\">Item 2</div>\n    <ul class=\"accordion-content\">\n      <li>Sub-item 2.1</li>\n      <li>Sub-item 2.2</li>\n    </ul>\n  </li>\n</ul>\n\n\n<script>\nconst headers = document.querySelectorAll('.accordion-header');\n\nheaders.forEach(header => {\n  header.addEventListener('click', () => {\n    const content = header.nextElementSibling;\n    content.classList.toggle('show');\n  });\n});\n</script>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\nThe HTML structures the nested list using `<ul>` and `<li>` elements. The CSS styles the list items, using classes `accordion-header` and `accordion-content` to distinguish between the header and its content.  The `display: none;` on `.accordion-content` initially hides the sub-lists. The JavaScript adds event listeners to each header, toggling the `show` class (which changes `display` to `block`) when clicked, thus revealing or hiding the content.  The `nextElementSibling` selector is used to efficiently target the immediately following sibling `<ul>` element containing the sub-list.\n\n**Links to Resources to Learn More:**\n\n* **CSS Selectors:** [MDN Web Docs - CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Selectors)  (Essential for understanding how to target specific elements)\n* **CSS Display Property:** [MDN Web Docs - CSS display property](https://developer.mozilla.org/en-US/docs/Web/CSS/display) (Understanding `display: none;` and `display: block;` is key)\n* **JavaScript Event Listeners:** [MDN Web Docs - AddEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) (For the interactive accordion functionality)\n* **Tailwind CSS (Alternative):** [Tailwind CSS Documentation](https://tailwindcss.com/docs) (If you want to explore a more rapid CSS development framework)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1970,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordion"}]
