[{"body":"\nThis challenge involves creating an interactive card that expands to reveal more content when hovered over.  We'll use CSS3 transitions and transforms to achieve the animation. No JavaScript is required.\n\n## Description of the Styling\n\nThe card will start in a compact state, displaying only a title and a brief description. On hover, the card will smoothly expand horizontally to reveal additional content (in this example, some placeholder text).  The expansion will be accompanied by a subtle fade-in effect for the additional content. The styling will be clean and modern.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Expanding Card</title>\n<style>\nbody {\n  font-family: sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f0f0f0;\n}\n\n.card {\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Hide content that overflows on expansion */\n  width: 300px;\n  transition: width 0.3s ease-in-out; /* Smooth width transition */\n}\n\n.card:hover {\n  width: 500px; /* Expanded width on hover */\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.card-title {\n  font-size: 1.5em;\n  margin-bottom: 10px;\n}\n\n.card-description {\n  margin-bottom: 10px;\n  opacity:1;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.card:hover .card-description {\n  opacity: 1;\n}\n\n.card-details {\n  opacity: 0; /* Initially hidden */\n  transition: opacity 0.3s ease-in-out; /* Smooth fade-in transition */\n}\n\n.card:hover .card-details {\n  opacity: 1; /* Revealed on hover */\n}\n</style>\n</head>\n<body>\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h2 class=\"card-title\">Expanding Card</h2>\n    <p class=\"card-description\">Hover over me to see more!</p>\n    <div class=\"card-details\">\n      <p>This is some additional content that is revealed when you hover over the card. You can add as much text as you like here.</p>\n      <p>This demonstrates the use of CSS transitions and transforms to create a smooth animation.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n## Explanation\n\n* **Transitions:** The `transition` property is used on the `.card` and `.card-details` elements to create smooth animations for width and opacity changes, respectively.  `ease-in-out` provides a natural-feeling animation.\n* **Transforms:** While not explicitly used here (we're just changing the width), transforms (`transform: scale()`, `transform: translate()`) could be added for more complex animations.\n* **Opacity:** The `opacity` property controls the visibility of the `.card-details` element, providing a fade-in effect.\n* **Hover Pseudo-class:** The `:hover` pseudo-class is used to trigger the animation when the mouse hovers over the card.\n* **Overflow: hidden:** This is crucial to prevent the content from overflowing the card before the animation starts.\n\n\n## Links to Resources to Learn More\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Pseudo-classes:** [MDN Web Docs - CSS Pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2436,"title":"CSS Challenge:  Animated Expanding Card"}]
