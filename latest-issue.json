[{"body":"\nThis challenge involves creating a 3D rotating cube using only CSS.  We'll use CSS3 transforms and animations to achieve this effect.  No JavaScript is required.\n\n**Description of the Styling:**\n\nThe cube is constructed using six divs, each representing a face. These divs are positioned absolutely within a parent container.  CSS transforms (`rotateX`, `rotateY`, `translateZ`) are used to position and rotate the faces to create the 3D illusion.  `animation` is used to create the continuous rotation effect. The faces are styled with different background colors for clarity.\n\n**Full Code (CSS only):**\n\n```css\n.container {\n  width: 200px;\n  height: 200px;\n  perspective: 400px; /* Adjust for perspective effect */\n  margin: 50px auto;\n}\n\n.cube {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d; /* Important for 3D rendering */\n  animation: rotate 8s linear infinite; /* Adjust animation speed and duration */\n}\n\n.face {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  background-color: #f00; /* Default red */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n  color: white;\n  backface-visibility: hidden; /* Prevent back faces from showing */\n}\n\n.face:nth-child(1) {\n  background-color: #f00; /* Red */\n  transform: translateZ(50px);\n}\n\n.face:nth-child(2) {\n  background-color: #0f0; /* Green */\n  transform: rotateY(90deg) translateZ(50px);\n}\n\n.face:nth-child(3) {\n  background-color: #00f; /* Blue */\n  transform: rotateY(180deg) translateZ(50px);\n}\n\n.face:nth-child(4) {\n  background-color: #ff0; /* Yellow */\n  transform: rotateY(-90deg) translateZ(50px);\n}\n\n.face:nth-child(5) {\n  background-color: #0ff; /* Cyan */\n  transform: rotateX(90deg) translateZ(50px);\n}\n\n.face:nth-child(6) {\n  background-color: #f0f; /* Magenta */\n  transform: rotateX(-90deg) translateZ(50px);\n}\n\n\n@keyframes rotate {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n\n/* HTML Structure (Example):*/\n<div class=\"container\">\n  <div class=\"cube\">\n    <div class=\"face\">1</div>\n    <div class=\"face\">2</div>\n    <div class=\"face\">3</div>\n    <div class=\"face\">4</div>\n    <div class=\"face\">5</div>\n    <div class=\"face\">6</div>\n  </div>\n</div>\n\n```\n\n**Explanation:**\n\n* **`perspective`:** This property on the container creates the 3D effect.  Adjusting this value changes the perspective.\n* **`transform-style: preserve-3d;`:** This is crucial; it tells the browser to render the child elements in 3D space.\n* **`rotateX`, `rotateY`, `translateZ`:** These transforms position each face in 3D space. `translateZ` moves the face along the z-axis (depth), creating the cube's structure. `rotateX` and `rotateY` rotate around the x and y axes, respectively.\n* **`backface-visibility: hidden;`:** Prevents the back faces of the cube from being visible.\n* **`animation`:** This creates the continuous rotation. The `@keyframes` rule defines the animation steps.\n\n\n**Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks - 3D Transforms:** [https://css-tricks.com/almanac/properties/t/transform/](https://css-tricks.com/almanac/properties/t/transform/) (Search for 3D related articles on this site)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2791,"title":"CSS Challenge:  3D Rotating Cube"}]
