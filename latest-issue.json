[{"body":"\nThis challenge focuses on creating a responsive navigation bar that adapts seamlessly to different screen sizes.  We'll utilize CSS Grid for layout and a hamburger menu icon for smaller screens.  No JavaScript is required; the entire effect is achieved with CSS.  This example will use plain CSS, but could easily be adapted to Tailwind CSS.\n\n\n## Description of the Styling:\n\nThe navigation bar will be positioned at the top of the page.  On larger screens (above 768px), the navigation links will be displayed inline, evenly spaced. On smaller screens, the links will be hidden behind a hamburger menu icon. Clicking the icon will toggle the visibility of the links.  The styling will include a clean, modern aesthetic.\n\n\n## Full Code:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Navigation Bar</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 0;\n}\n\nnav {\n  background-color: #333;\n  color: #fff;\n  display: grid;\n  grid-template-columns: auto 1fr; /* Header and Navigation */\n  align-items: center;\n}\n\n.nav-brand {\n  padding: 1rem;\n}\n\n.nav-links {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.nav-links li {\n  margin: 0 1rem;\n}\n\n.nav-links a {\n  color: #fff;\n  text-decoration: none;\n}\n\n/* Hamburger menu styles */\n.hamburger {\n  display: none; /* Hidden on larger screens */\n  cursor: pointer;\n  padding: 1rem;\n}\n\n.hamburger span {\n  display: block;\n  width: 25px;\n  height: 3px;\n  background-color: white;\n  margin: 5px 0;\n}\n\n/* Responsive styles */\n@media (max-width: 767px) {\n  .nav-links {\n    display: none; /* Hide links on small screens */\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    background-color: #333;\n    flex-direction: column;\n  }\n\n  .nav-links li {\n    margin: 0.5rem 0;\n    text-align: center;\n  }\n\n  .hamburger {\n    display: block; /* Show hamburger menu on small screens */\n  }\n\n  .nav-links.active {\n    display: flex; /* Show links when hamburger is clicked */\n  }\n}\n\n\n</style>\n</head>\n<body>\n<nav>\n  <div class=\"nav-brand\">My Website</div>\n  <div class=\"hamburger\" onclick=\"toggleNav()\">\n    <span></span>\n    <span></span>\n    <span></span>\n  </div>\n  <ul class=\"nav-links\">\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">About</a></li>\n    <li><a href=\"#\">Services</a></li>\n    <li><a href=\"#\">Contact</a></li>\n  </ul>\n</nav>\n<script>\n  function toggleNav() {\n    document.querySelector('.nav-links').classList.toggle('active');\n  }\n</script>\n</body>\n</html>\n```\n\n## Explanation:\n\nThe CSS uses `grid-template-columns` to create a simple grid layout for the navigation bar.  The media query `@media (max-width: 767px)` targets screens smaller than 768 pixels.  Inside this query, the `nav-links` are hidden by default, and the hamburger menu is displayed. JavaScriptâ€™s `toggleNav` function simply adds and removes the `active` class to the `nav-links` element, controlling its visibility.\n\n\n\n## Links to Resources to Learn More:\n\n* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Media Queries:** [MDN Web Docs - CSS Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n* **Tailwind CSS:** [Tailwind CSS Official Website](https://tailwindcss.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2556,"title":"CSS Challenge: Responsive Navigation Bar with a Hamburger Menu"}]
