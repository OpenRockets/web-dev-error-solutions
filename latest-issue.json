[{"body":"\nThis challenge focuses on creating a simple, pulsating heart using only CSS.  We'll leverage CSS animations to achieve the effect. No JavaScript required!\n\n**Description of the Styling:**\n\nThe goal is to design a heart shape that smoothly changes its size over time, creating a pulsating animation. We'll achieve this using a pseudo-element (`::before` and `::after`) to create the heart shape and then apply a CSS animation to control the size changes. The animation will involve a smooth scaling up and down of the heart. Weâ€™ll use a simple red color for the heart.\n\n\n**Full Code (CSS Only):**\n\n```css\n.heart {\n  width: 0;\n  height: 0;\n  border-left: 50px solid transparent;\n  border-right: 50px solid transparent;\n  border-bottom: 100px solid red;\n  position: relative;\n  animation: pulse 1s infinite ease-in-out;\n}\n\n.heart::before {\n  content: \"\";\n  position: absolute;\n  left: -25px;\n  top: -50px;\n  border-left: 50px solid transparent;\n  border-right: 50px solid transparent;\n  border-bottom: 100px solid red;\n  transform: rotate(180deg); /* Mirror for other half of heart */\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n```\n\n**HTML (to use the CSS):**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Pulsating Heart</title>\n<style>\n/* Insert the CSS code here */\n</style>\n</head>\n<body>\n  <div class=\"heart\"></div>\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`.heart`:** This class creates the basic heart shape using borders. The `border-left` and `border-right` create the sides, while `border-bottom` forms the bottom curve.\n* **`.heart::before`:** This pseudo-element creates the mirrored top half of the heart, completing the shape.  `transform: rotate(180deg);` flips the bottom half to create the upper half.\n* **`@keyframes pulse`:** This defines the animation, smoothly scaling the heart between 100% and 110% of its original size. `infinite` makes the animation loop continuously, and `ease-in-out` provides a smooth transition.\n\n**Resources to Learn More:**\n\n* **CSS Animations:**  [MDN Web Docs - CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2902,"title":"CSS Challenge:  The Pulsating Heart"}]
