[{"body":"\nThis challenge focuses on creating a multi-level nested list that utilizes CSS-only accordions for expanding and collapsing each list item's sub-items.  We'll leverage CSS3 features for styling and functionality. No JavaScript will be used.\n\n**Description of the Styling:**\n\nThe nested list will have a clean and modern appearance.  Top-level list items will be displayed with a distinct heading style.  Subsequent levels will be indented and visually differentiated through color and spacing.  The accordion functionality will involve using the `:target` pseudo-class and sibling selectors to elegantly hide and show nested list items without JavaScript. Each list item will have a visually appealing toggle element to trigger the expansion/collapse.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Nested List Accordion</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.accordion {\n  background-color: #f2f2f2;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  transition: 0.4s;\n}\n\n.active, .accordion:hover {\n  background-color: #ddd;\n}\n\n.accordion:after {\n  content: '\\2795'; /* Unicode character for \"plus\" sign */\n  color: #777;\n  font-weight: bold;\n  float: right;\n  margin-left: 5px;\n}\n\n.active:after {\n  content: \"\\2796\"; /* Unicode character for \"minus\" sign */\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n\n.panel.show {\n  max-height: 500px;  /* Adjust as needed */\n}\n\nol {\n    list-style-type: decimal;\n    margin-left: 20px;\n}\n\nol ol {\n  margin-left: 40px;\n}\n\nol li {\n    margin-bottom: 10px;\n}\n\nh3 {\n  margin-top: 0;\n}\n</style>\n</head>\n<body>\n\n<h2>Nested List with Accordions</h2>\n\n<div class=\"accordion\">\n  <h3>Item 1</h3>\n  <div class=\"panel\">\n    <ol>\n      <li>Subitem 1.1</li>\n      <li>Subitem 1.2\n        <ol>\n          <li>Subsubitem 1.2.1</li>\n          <li>Subsubitem 1.2.2</li>\n        </ol>\n      </li>\n      <li>Subitem 1.3</li>\n    </ol>\n  </div>\n</div>\n\n<div class=\"accordion\">\n  <h3>Item 2</h3>\n  <div class=\"panel\">\n    <p>Content for Item 2</p>\n  </div>\n</div>\n\n<script>\nvar acc = document.getElementsByClassName(\"accordion\");\nvar i;\n\nfor (i = 0; i < acc.length; i++) {\n  acc[i].addEventListener(\"click\", function() {\n    this.classList.toggle(\"active\");\n    var panel = this.nextElementSibling;\n    if (panel.style.maxHeight){\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = panel.scrollHeight + \"px\";\n    }\n  });\n}\n</script>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\nThe CSS uses the `:target` pseudo-class in conjunction with the `max-height` property to control the visibility of nested lists.  The JavaScript is used to add functionality for collapsing and expanding the content. The `accordion` class manages the styling of the list items, while `panel` handles the collapsible content.  The `active` class applies styling changes when the accordion is expanded.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Selectors:** [MDN Web Docs - CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Selectors)\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Pseudo-classes:** [MDN Web Docs - CSS Pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes)\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2857,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordions"}]
