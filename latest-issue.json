[{"body":"\nThis challenge involves creating a responsive pricing table using CSS.  We'll aim for a clean, modern look that adapts well to different screen sizes.  The table will feature three pricing plans: Basic, Pro, and Premium, each with its own set of features and price.  We'll use a combination of CSS Grid and Flexbox for layout and responsiveness.\n\n**Description of the Styling:**\n\nThe pricing table will be contained within a card-like structure. Each plan will be represented by a column in a grid layout.  We will use appropriate colors, fonts, and spacing to create a visually appealing and easy-to-read design.  Responsiveness will be achieved by using media queries to adjust the layout for smaller screens (e.g., switching to a single-column layout on mobile).\n\n**Full Code (CSS only - HTML would be required for structure):**\n\n```css\n/* Basic Styles */\nbody {\n  font-family: sans-serif;\n  margin: 2rem;\n}\n\n.pricing-table {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */\n  grid-gap: 20px;\n}\n\n.plan {\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  text-align: center;\n}\n\n.plan h2 {\n  margin-bottom: 10px;\n}\n\n.plan .price {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.plan ul {\n  list-style: none;\n  padding: 0;\n}\n\n.plan li {\n  margin-bottom: 5px;\n}\n\n/* Media Query for Smaller Screens */\n@media (max-width: 768px) {\n  .pricing-table {\n    grid-template-columns: 1fr; /* Single column on smaller screens */\n  }\n}\n\n\n/* Styling for specific plans (can be customized further):*/\n.plan.basic {\n    background-color: #f0f0f0;\n}\n\n.plan.pro {\n    background-color: #e0e0e0;\n}\n\n.plan.premium {\n    background-color: #d0d0d0;\n}\n```\n\n**Explanation:**\n\n* **`display: grid;`**: This establishes a grid layout for the pricing table.\n* **`grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));`**: This creates responsive columns. `auto-fit` automatically adjusts the number of columns based on screen size, and `minmax(300px, 1fr)` ensures each column is at least 300px wide but also takes up available space proportionally.\n* **`grid-gap: 20px;`**: This adds spacing between the columns.\n* **`@media (max-width: 768px)`**: This media query targets screens smaller than 768px and switches to a single-column layout.\n* The rest of the CSS styles the individual plan elements (headings, prices, feature lists, etc.).\n\n\n**HTML Structure (Example):**  You'll need this to accompany the CSS above.\n\n```html\n<div class=\"pricing-table\">\n  <div class=\"plan basic\">\n    <h2>Basic</h2>\n    <div class=\"price\">$9/month</div>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n    </ul>\n  </div>\n  <div class=\"plan pro\">\n    <h2>Pro</h2>\n    <div class=\"price\">$29/month</div>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n    </ul>\n  </div>\n  <div class=\"plan premium\">\n    <h2>Premium</h2>\n    <div class=\"price\">$49/month</div>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n    </ul>\n  </div>\n</div>\n```\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Grid:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Flexbox:** [MDN Web Docs - CSS Flexible Box Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout)\n* **Media Queries:** [MDN Web Docs - Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2546,"title":"CSS Challenge: Responsive Pricing Table"}]
