[{"body":"\nThis challenge involves creating a responsive, multi-level navigation menu using CSS.  The menu will expand sub-menus on hover, and gracefully adapt to different screen sizes. We will utilize CSS Grid and Flexbox for layout and responsiveness.\n\n\n## Description of the Styling\n\nThe navigation menu will have a clean and modern look.  The top-level items will be displayed horizontally. On hover, a sub-menu will slide down from the corresponding top-level item.  The sub-menu items will be vertically stacked.  The menu will adapt smoothly to smaller screens, potentially collapsing into a hamburger menu for optimal mobile usability (though this challenge focuses on the initial structure).  We'll use a light color scheme for readability.\n\n## Full Code (CSS only)\n\n```css\nnav {\n  background-color: #f0f0f0;\n  overflow: hidden; /* To prevent submenus from overflowing */\n}\n\n.nav-item {\n  display: inline-block;\n  position: relative; /* Required for positioning submenus */\n  padding: 10px 20px;\n}\n\n.nav-item a {\n  text-decoration: none;\n  color: #333;\n}\n\n.nav-item:hover {\n  background-color: #ddd;\n}\n\n.submenu {\n  display: none;\n  position: absolute;\n  background-color: #f9f9f9;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1; /* Ensures submenu appears above other elements */\n  left: 0;\n}\n\n.nav-item:hover .submenu {\n  display: block;\n}\n\n.submenu-item {\n  padding: 10px 20px;\n  border-bottom: 1px solid #ddd;\n}\n\n.submenu-item:last-child {\n  border-bottom: none;\n}\n\n/* Media query for smaller screens (adjust breakpoint as needed) */\n@media (max-width: 768px) {\n  .nav-item {\n    display: block; /* Stack items vertically */\n    width: 100%; /* Occupy full width */\n  }\n  .submenu {\n    position: static; /* Submenus appear below parent items */\n    left: 0;\n  }\n}\n```\n\nTo use this code, you'll need an accompanying HTML structure like this:\n\n```html\n<nav>\n  <div class=\"nav-item\">\n    <a href=\"#\">Item 1</a>\n    <div class=\"submenu\">\n      <div class=\"submenu-item\"><a href=\"#\">Subitem 1.1</a></div>\n      <div class=\"submenu-item\"><a href=\"#\">Subitem 1.2</a></div>\n    </div>\n  </div>\n  <div class=\"nav-item\">\n    <a href=\"#\">Item 2</a>\n    <div class=\"submenu\">\n      <div class=\"submenu-item\"><a href=\"#\">Subitem 2.1</a></div>\n    </div>\n  </div>\n  <div class=\"nav-item\">\n    <a href=\"#\">Item 3</a>\n  </div>\n</nav>\n```\n\n\n## Explanation\n\n* **`nav`:**  The main navigation container.  `overflow: hidden` prevents submenus from extending beyond the boundaries of the navigation.\n* **`.nav-item`:**  Each top-level menu item. `position: relative` allows us to position the submenu absolutely within the item.\n* **`.submenu`:** The container for sub-menu items. `display: none` hides it initially, and `display: block` on hover shows it.\n* **`.submenu-item`:**  Each sub-menu item.\n* **Media Query:** The `@media` query adjusts the layout for smaller screens, stacking the menu items vertically.\n\n\n## Links to Resources to Learn More\n\n* **CSS Grid Layout:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Flexbox:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout)\n* **CSS Positioning:** [https://developer.mozilla.org/en-US/docs/Web/CSS/position](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1947,"title":"CSS Challenge: Responsive Multi-level Navigation Menu"}]
