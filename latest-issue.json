[{"body":"\nThis challenge involves creating a 3D rotating cube using CSS transforms and animations.  We'll achieve this effect without any JavaScript, relying solely on CSS3 properties.  The cube will have six distinct faces, each with a different color, and will smoothly rotate continuously.\n\n\n## Styling Description\n\nThe cube is constructed using six divs, each representing a face. These divs are positioned absolutely within a parent container.  CSS transforms (`rotateX`, `rotateY`, `translateZ`) are used to position and orient each face in 3D space.  A CSS animation creates the continuous rotation effect.  We'll use a simple color scheme for each face for clarity.\n\n\n## Full Code (CSS Only)\n\n```css\n.container {\n  width: 200px;\n  height: 200px;\n  perspective: 800px; /* Adjust for perspective effect */\n  position: relative;\n  margin: 50px auto;\n}\n\n.cube {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  transform-style: preserve-3d; /* Essential for 3D effect */\n  animation: rotate 8s linear infinite; /* Animate rotation */\n}\n\n.face {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  line-height: 100px; /* Center text vertically */\n  text-align: center;\n  font-size: 2em;\n  font-weight: bold;\n  backface-visibility: hidden; /* Prevents faces from appearing flipped */\n}\n\n.front {\n  background-color: #f00;\n  transform: translateZ(50px);\n}\n\n.back {\n  background-color: #0f0;\n  transform: translateZ(-50px) rotateY(180deg);\n}\n\n.right {\n  background-color: #00f;\n  transform: rotateY(90deg) translateZ(50px);\n}\n\n.left {\n  background-color: #ff0;\n  transform: rotateY(-90deg) translateZ(50px);\n}\n\n.top {\n  background-color: #0ff;\n  transform: rotateX(90deg) translateZ(50px);\n}\n\n.bottom {\n  background-color: #f0f;\n  transform: rotateX(-90deg) translateZ(50px);\n}\n\n@keyframes rotate {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n\n/*HTML Structure (example)*/\n<div class=\"container\">\n  <div class=\"cube\">\n    <div class=\"face front\">Front</div>\n    <div class=\"face back\">Back</div>\n    <div class=\"face right\">Right</div>\n    <div class=\"face left\">Left</div>\n    <div class=\"face top\">Top</div>\n    <div class=\"face bottom\">Bottom</div>\n  </div>\n</div>\n```\n\n## Explanation\n\n* **`perspective`:** This property on the container creates the 3D perspective.  Adjusting this value changes how the cube appears to recede into the distance.\n* **`transform-style: preserve-3d;`:** This is crucial. It tells the browser to render the children elements in 3D space.\n* **`backface-visibility: hidden;`:**  This prevents the back faces of the cube from being visible when they are facing away from the viewer.\n* **`transform`:** Each face uses `transform` to position itself correctly within the 3D space.  `translateZ` moves the face along the Z-axis (depth), while `rotateX` and `rotateY` rotate it around the X and Y axes.\n* **`@keyframes rotate`:** This defines the animation, smoothly rotating the cube around the Y-axis.\n\n\n## Resources to Learn More\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks - 3D Transforms:** [Search \"3D Transforms\" on css-tricks.com for various tutorials]\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2115,"title":"CSS Challenge:  3D Rotating Cube"}]
