
This challenge focuses on creating a clean and responsive pricing table using CSS.  We'll leverage standard CSS3 properties for layout and styling, demonstrating techniques applicable to a wide range of projects.  No CSS preprocessors like Tailwind CSS will be used in this example to keep the core CSS concepts clear.


**Description of the Styling:**

The pricing table will consist of three columns representing different pricing plans (Basic, Pro, Premium). Each column will include a plan name, a price, a list of features, and a call-to-action button.  The styling will emphasize clear visual separation between plans and a clean, modern aesthetic. We'll use a combination of flexbox and grid for layout to ensure responsiveness across different screen sizes.


**Full Code:**

```html
<!DOCTYPE html>
<html>
<head>
<title>Pricing Table</title>
<style>
body {
  font-family: sans-serif;
}

.pricing-table {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */
  gap: 20px;
  padding: 20px;
}

.plan {
  border: 1px solid #ccc;
  padding: 20px;
  text-align: center;
}

.plan h2 {
  margin-top: 0;
}

.plan .price {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 10px;
}

.plan ul {
  list-style: none;
  padding: 0;
}

.plan li {
  margin-bottom: 5px;
}

.plan button {
  background-color: #4CAF50;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
</style>
</head>
<body>

<div class="pricing-table">
  <div class="plan">
    <h2>Basic</h2>
    <div class="price">$9/month</div>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
    </ul>
    <button>Sign Up</button>
  </div>
  <div class="plan">
    <h2>Pro</h2>
    <div class="price">$29/month</div>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
      <li>Feature 4</li>
      <li>Feature 5</li>
    </ul>
    <button>Sign Up</button>
  </div>
  <div class="plan">
    <h2>Premium</h2>
    <div class="price">$49/month</div>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
      <li>Feature 4</li>
      <li>Feature 5</li>
      <li>Feature 6</li>
    </ul>
    <button>Sign Up</button>
  </div>
</div>

</body>
</html>
```


**Explanation:**

* **Grid Layout:** The `pricing-table` div uses `display: grid` with `grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))` for responsive behavior. This allows the columns to adjust based on screen size, ensuring a good experience on both desktop and mobile.
* **Plan Styling:** Each `.plan` div is styled individually with borders and padding.
* **Responsiveness:** The `auto-fit` keyword in the grid template columns ensures that the number of columns adjusts automatically based on screen width. The `minmax` function sets a minimum width of 300px and allows columns to grow to fill available space.

**Links to Resources to Learn More:**

* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)
* **CSS Flexbox:** [MDN Web Docs - CSS Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

