[{"body":"\nThis challenge focuses on building a responsive image gallery using CSS Grid.  The goal is to create a visually appealing layout that adapts seamlessly to different screen sizes, showcasing a set of images effectively. We'll utilize CSS Grid for its power in creating complex layouts easily.\n\n**Description of the Styling:**\n\nThe gallery will display images in a grid, with a fixed number of columns on larger screens and collapsing to a single column on smaller screens.  We'll add a subtle hover effect to the images, perhaps a slight shadow or opacity change.  The overall style will be clean and modern.\n\n**Full Code (HTML & CSS):**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Image Gallery</title>\n<style>\n.gallery {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive columns */\n  grid-gap: 20px;\n  padding: 20px;\n}\n\n.gallery img {\n  width: 100%;\n  height: auto;\n  display: block; /* Prevents extra space below images */\n  transition: transform 0.3s ease; /* Smooth hover effect */\n}\n\n.gallery img:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n}\n\n/* Mobile-first approach: Single column on smaller screens */\n@media (max-width: 768px) {\n  .gallery {\n    grid-template-columns: 1fr; /* Single column */\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"gallery\">\n  <img src=\"image1.jpg\" alt=\"Image 1\">\n  <img src=\"image2.jpg\" alt=\"Image 2\">\n  <img src=\"image3.jpg\" alt=\"Image 3\">\n  <img src=\"image4.jpg\" alt=\"Image 4\">\n  <img src=\"image5.jpg\" alt=\"Image 5\">\n  <img src=\"image6.jpg\" alt=\"Image 6\">\n</div>\n\n</body>\n</html>\n```\n\n**Remember to replace `\"image1.jpg\"`, `\"image2.jpg\"`, etc. with the actual paths to your images.**\n\n\n**Explanation:**\n\n* **`display: grid;`**: This is the core of CSS Grid.  It enables grid layout for the `.gallery` container.\n* **`grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));`**: This is the magic of responsive grid. `repeat(auto-fit, ...)` allows the grid to automatically adjust the number of columns based on available space. `minmax(250px, 1fr)` ensures each column is at least 250px wide, but will also share available space equally (`1fr`).\n* **`grid-gap: 20px;`**: Adds spacing between the grid items (images).\n* **`@media (max-width: 768px)`**: This media query targets screens smaller than 768px (tablets and smaller).  Inside, we set `grid-template-columns: 1fr;` to create a single-column layout.\n* **`transition` and `transform`**: These properties create the smooth hover effect.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Grid Layout:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout) (MDN Web Docs)\n* **CSS Grid Tutorial:** [https://css-tricks.com/snippets/css/complete-guide-grid/](https://css-tricks.com/snippets/css/complete-guide-grid/) (CSS-Tricks)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1858,"title":"CSS Challenge: Responsive Image Gallery with CSS Grid"}]
