[{"body":"\nThis challenge focuses on creating an animated circular progress bar using Tailwind CSS.  The bar will visually represent a percentage value (we'll use 75% for this example), animating from 0% to the target percentage. We'll achieve the animation using CSS only, leveraging Tailwind's utility classes for efficient styling.\n\n**Description of the Styling:**\n\nThe progress bar will be a circle composed of two overlapping SVG elements: a background circle and a foreground circle representing the progress.  The foreground circle will be animated to increase its stroke-dasharray value, creating the filling effect. Tailwind will handle the sizing, colors, and positioning.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Circular Progress Bar</title>\n<link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n<style>\n  .progress-ring {\n    transform: rotate(-90deg); /* Start at the top */\n  }\n\n  .progress-ring__circle {\n    stroke-width: 10;\n    stroke-linecap: round;\n    transition: stroke-dashoffset 0.5s ease-in-out; /* Smooth animation */\n  }\n</style>\n</head>\n<body class=\"bg-gray-100 flex justify-center items-center h-screen\">\n\n<svg class=\"progress-ring w-48 h-48\" viewBox=\"0 0 100 100\">\n  <circle class=\"progress-ring__circle text-gray-300\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"transparent\" stroke-dasharray=\"251.327\" stroke-dashoffset=\"251.327\"></circle>\n  <circle class=\"progress-ring__circle text-blue-500\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"transparent\" stroke-dasharray=\"251.327\" stroke-dashoffset=\"62.83175\" style=\"stroke-dashoffset: calc(251.327 - 251.327 * 0.75);\"></circle>\n</svg>\n\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **HTML Structure:**  We use an SVG `<circle>` element for the background and another for the progress.  The `viewBox` attribute defines the SVG's coordinate system.\n* **CSS Styling:** Tailwind classes (`w-48`, `h-48`, `text-gray-300`, `text-blue-500`) control the size and colors. The `stroke-dasharray` property sets the total length of the circle's circumference.  `stroke-dashoffset` controls the starting point of the stroke.  The initial `stroke-dashoffset` equals the `stroke-dasharray`, making the circle invisible at the start.  The animation is done by changing this offset.\n* **Animation:** The Javascript portion calculates the `stroke-dashoffset` dynamically based on the percentage (75% in this case).   The `transition` property ensures a smooth animation.  Note that the example has the percentage hardcoded, but this can easily be made dynamic with Javascript.\n* **Tailwind's Role:** Tailwind simplifies the styling by providing ready-to-use classes for colors, sizes, and spacing.\n\n\n**Links to Resources to Learn More:**\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)\n* **SVG Tutorial:** [https://developer.mozilla.org/en-US/docs/Web/SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n* **CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2446,"title":"CSS Challenge:  Animated Circular Progress Bar with Tailwind CSS"}]
