[{"body":"\nThis challenge focuses on creating a responsive layout of cards using CSS Grid or Flexbox.  The goal is to achieve a clean and visually appealing multi-column arrangement that adapts seamlessly to different screen sizes. We'll be using CSS Grid for this example due to its inherent suitability for grid-based layouts.\n\n**Description of the Styling:**\n\nThe layout will consist of multiple cards displayed in a grid.  On larger screens (e.g., desktop), the cards will be arranged in a 3-column grid. As the screen size decreases (e.g., tablet or mobile), the grid will reflow to 2 columns, and then finally to a single column on very small screens. Each card will have a consistent size and padding, including an image at the top and descriptive text below.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Card Layout</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 20px;\n}\n\n.card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */\n  grid-gap: 20px;\n}\n\n.card {\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.card img {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.card-content {\n  padding: 15px;\n}\n\n.card-title {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.card-description {\n  color: #555;\n  line-height: 1.6;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card-container\">\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/300x200\" alt=\"Card Image 1\">\n    <div class=\"card-content\">\n      <h3 class=\"card-title\">Card Title 1</h3>\n      <p class=\"card-description\">This is a sample card description. You can add more text here.</p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/300x200\" alt=\"Card Image 2\">\n    <div class=\"card-content\">\n      <h3 class=\"card-title\">Card Title 2</h3>\n      <p class=\"card-description\">Another sample card description.  Add more details as needed.</p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/300x200\" alt=\"Card Image 3\">\n    <div class=\"card-content\">\n      <h3 class=\"card-title\">Card Title 3</h3>\n      <p class=\"card-description\">Yet another sample card description.  Be creative!</p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/300x200\" alt=\"Card Image 4\">\n    <div class=\"card-content\">\n      <h3 class=\"card-title\">Card Title 4</h3>\n      <p class=\"card-description\">This is a sample card description. You can add more text here.</p>\n    </div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));`**: This is the core of the responsive layout. `repeat(auto-fit, ...)` allows the grid to automatically adjust the number of columns based on available space. `minmax(300px, 1fr)` ensures that each column is at least 300px wide but also allows them to grow proportionally to fill available space (`1fr`).\n* **`grid-gap: 20px;`**:  This adds spacing between the cards.\n* **Media Queries (Not used in this example, but could be added for more fine-grained control):**  For more advanced responsive design, you could add media queries to adjust the grid further at specific breakpoints.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Grid Layout:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Flexbox:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2930,"title":"CSS Challenge: Responsive Multi-column Card Layout"}]
