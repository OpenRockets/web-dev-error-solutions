[{"body":"\nThis challenge involves creating a responsive navigation bar that sticks to the top of the viewport when the user scrolls down.  We'll use CSS (specifically CSS3) for styling and layout.  No JavaScript will be required.\n\n\n## Description of the Styling\n\nThe navigation bar should be:\n\n* **Visually Appealing:**  Clean design, easy to read, and uses consistent spacing.\n* **Responsive:** Adapts seamlessly to different screen sizes (desktops, tablets, and mobile phones).\n* **Sticky:** Remains fixed at the top of the viewport once the user scrolls past its initial position.\n* **Concise:** Uses efficient CSS for minimal code.\n\nThe navigation bar will contain a logo on the left, a list of navigation items in the center, and a button on the right (e.g., \"Sign In\").  On smaller screens, the navigation items will collapse into a hamburger menu.\n\n\n## Full Code\n\n```css\n/* Basic Styles */\nbody {\n  margin: 0;\n  font-family: sans-serif;\n}\n\nnav {\n  background-color: #333;\n  color: #fff;\n  padding: 1rem 0;\n  position: relative; /* Important for sticky position */\n}\n\n.nav-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nav-logo {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n.nav-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n}\n\n.nav-item {\n  margin: 0 1rem;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #fff;\n}\n\n.nav-button {\n  background-color: #007bff;\n  color: #fff;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n\n/* Responsive Styles */\n@media (max-width: 768px) {\n  .nav-list {\n    display: none; /* Hide the nav list on smaller screens */\n  }\n\n  .nav-toggle {\n    display: block; /* Show the hamburger menu button */\n  }\n\n  .nav-list.active {\n    display: flex;\n    flex-direction: column; /* Stack items vertically */\n    position: absolute;\n    top: 100%;\n    left: 0;\n    background-color: #333;\n    width: 100%;\n  }\n\n  .nav-item {\n    margin: 0.5rem;\n  }\n\n}\n\n/* Sticky Header */\nnav.sticky {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1000; /* Ensure it's on top */\n}\n\n/*Add this to show the hamburger icon, you can use any icon library of your choice*/\n.nav-toggle {\n  display: none;\n  cursor: pointer;\n}\n\n.nav-toggle span {\n  display: block;\n  width: 25px;\n  height: 3px;\n  margin: 5px 0;\n  background-color: white;\n}\n\n/*Example HTML Structure (you need to adapt this to your project)*/\n<nav id=\"myNav\" class=\"nav\">\n  <div class=\"nav-container\">\n    <div class=\"nav-logo\">My Logo</div>\n    <div class=\"nav-toggle\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n    <ul class=\"nav-list\">\n      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">Home</a></li>\n      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">About</a></li>\n      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">Services</a></li>\n      <li class=\"nav-item\"><a href=\"#\" class=\"nav-link\">Contact</a></li>\n    </ul>\n    <button class=\"nav-button\">Sign In</button>\n  </div>\n</nav>\n\n<script>\n  const nav = document.getElementById('myNav');\n  const toggle = document.querySelector('.nav-toggle');\n  const navList = document.querySelector('.nav-list');\n\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 0) {\n      nav.classList.add('sticky');\n    } else {\n      nav.classList.remove('sticky');\n    }\n  });\n\n  toggle.addEventListener('click', () => {\n    navList.classList.toggle('active');\n  })\n</script>\n```\n\n\n## Explanation\n\nThe CSS is divided into sections:\n\n* **Basic Styles:**  Sets up the basic layout, colors, and fonts.\n* **Responsive Styles:** Uses media queries (`@media (max-width: 768px)`) to adjust the layout for smaller screens. The navigation list is hidden and a hamburger menu is shown.\n* **Sticky Header:**  Uses `position: fixed` to make the navigation bar stick to the top after scrolling past it. `z-index` ensures that it's displayed above other content.\n* **Javascript:** This simple script adds sticky functionality and makes the hamburger menu work.  You'll need to add this to your HTML for the code to work correctly.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs CSS:** [https://developer.mozilla.org/en-US/docs/Web/CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)\n* **CSS-Tricks:** [https://css-tricks.com/](https://css-tricks.com/)\n* **FreeCodeCamp Responsive Web Design Certification:** [https://www.freecodecamp.org/learn/responsive-web-design/](https://www.freecodecamp.org/learn/responsive-web-design/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1615,"title":"CSS Challenge:  Responsive Navigation Bar with a Sticky Header"}]
