[{"body":"\nThis challenge focuses on creating a fluid and responsive navigation bar using CSS.  The navigation bar should adapt smoothly to different screen sizes, maintaining usability and a clean aesthetic. We'll use plain CSS (no CSS frameworks like Tailwind, Bootstrap, etc.) to demonstrate fundamental CSS principles.\n\n**Description of the Styling:**\n\nThe navigation bar will contain a logo on the left and a list of navigation items on the right.  On larger screens, the items will be displayed inline.  As the screen size decreases, the navigation items will stack vertically, revealing a hamburger menu icon for easy access.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Navigation Bar</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 0;\n}\n\nnav {\n  background-color: #333;\n  overflow: hidden;\n}\n\nnav ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\nnav li {\n  float: left;\n}\n\nnav li a {\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\nnav li a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n/* Responsive design */\n@media screen and (max-width: 600px) {\n  nav li {\n    float: none;\n    width: 100%;\n  }\n  nav li a {\n    display: block;\n  }\n}\n\n/* Hamburger menu style (optional) */\n.hamburger {\n  display: none;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-right: 10px;\n}\n.hamburger span {\n  display: block;\n  height: 3px;\n  width: 30px;\n  background-color: white;\n  margin: 5px;\n  transition: all 0.3s ease;\n}\n.hamburger.active span:nth-child(1) {\n  transform: rotate(45deg) translate(5px, 5px);\n}\n.hamburger.active span:nth-child(2) {\n  opacity: 0;\n}\n.hamburger.active span:nth-child(3) {\n  transform: rotate(-45deg) translate(5px, -5px);\n}\n\n@media screen and (max-width: 600px) {\n  .hamburger {\n    display: block;\n  }\n  nav ul {\n    display: none;\n  }\n  nav ul.show {\n    display: block;\n  }\n}\n</style>\n</head>\n<body>\n\n<nav>\n  <div class=\"hamburger\">\n    <span></span>\n    <span></span>\n    <span></span>\n  </div>\n  <ul>\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">About</a></li>\n    <li><a href=\"#\">Services</a></li>\n    <li><a href=\"#\">Contact</a></li>\n  </ul>\n</nav>\n\n<script>\n  const hamburger = document.querySelector(\".hamburger\");\n  const navUl = document.querySelector(\"nav ul\");\n  hamburger.addEventListener(\"click\", () => {\n    hamburger.classList.toggle(\"active\");\n    navUl.classList.toggle(\"show\");\n  });\n</script>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\nThe CSS utilizes media queries (`@media screen and (max-width: 600px)`) to adjust the layout based on screen size.  On smaller screens, the `float: left;` property is removed from the list items, causing them to stack vertically.  A simple hamburger menu is implemented using CSS transitions for a smooth visual effect.  JavaScript is used to toggle the visibility of the navigation items on smaller screens.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS:** [https://developer.mozilla.org/en-US/docs/Web/CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)\n* **MDN Web Docs - Media Queries:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries)\n* **FreeCodeCamp - Responsive Web Design:** [https://www.freecodecamp.org/learn/responsive-web-design/](https://www.freecodecamp.org/learn/responsive-web-design/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1933,"title":"CSS Challenge:  Fluid, Responsive Navigation Bar"}]
