[{"body":"\nThis challenge involves creating an animated circular progress bar using CSS.  We'll achieve this using only CSS, without relying on JavaScript. The goal is to create a visually appealing and smoothly animated progress indicator.  This solution utilizes CSS variables and animations for flexibility and control.\n\n\n## Styling Description\n\nThe progress bar is a circle with a thicker ring representing the progress track.  The inner part of the ring fills progressively to indicate the percentage complete.  The animation smoothly fills the circle from 0% to a specified value.  We'll use CSS variables to easily adjust the size, colors, and percentage complete.\n\n\n## Full Code (CSS Only)\n\n```css\n:root {\n  --progress-size: 150px;\n  --progress-background: #e0e0e0;\n  --progress-color: #4CAF50;\n  --progress-percentage: 75; /* Adjust this value to change the progress */\n}\n\n.progress-container {\n  width: var(--progress-size);\n  height: var(--progress-size);\n  position: relative;\n}\n\n.progress-ring {\n  width: var(--progress-size);\n  height: var(--progress-size);\n  border-radius: 50%;\n  border: 10px solid var(--progress-background);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  width: var(--progress-size);\n  height: var(--progress-size);\n  border-radius: 50%;\n  border: 10px solid var(--progress-color);\n  border-right-color: transparent; /* Hide the right side of the circle initially*/\n  transform: rotate(-90deg); /* Start at 0% position */\n  animation: progress-animation var(--progress-duration) linear forwards;\n}\n\n\n@keyframes progress-animation {\n  to {\n    transform: rotate(calc(360deg * var(--progress-percentage) / 100 - 90deg));\n  }\n}\n\n/* Set animation duration based on percentage */\n:root {\n  --progress-duration: 2s; /* Adjust as needed */\n}\n```\n\n**To use this code:**\n\n1. Create an HTML file (e.g., `index.html`).\n2. Add a `<div>` with the class `progress-container` in the `<body>` of your HTML file.\n3. Include the CSS code in a `<style>` tag within the `<head>` or in a separate CSS file linked to your HTML.\n\nThe progress bar will appear within the `progress-container` div.\n\n\n## Explanation\n\n* **CSS Variables:**  Using `:root` allows for easy customization of colors, size, and percentage.\n* **`::before` Pseudo-element:** Creates the inner circle that fills up.\n* **`border-right-color: transparent;`:**  This cleverly hides the part of the circular border that isn't yet \"filled,\" creating the effect of a partially filled circle.\n* **`transform: rotate();`:**  Rotates the inner circle to simulate the filling effect.\n* **`@keyframes progress-animation`:**  Defines the animation that rotates the inner circle over time.  `linear` ensures a smooth animation. `forwards` keeps the animation at its final state.\n* **`calc()`:**  Dynamically calculates the rotation angle based on the percentage.\n\n## Resources to Learn More\n\n* **MDN Web Docs on CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n* **MDN Web Docs on CSS Variables:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables)\n* **CSS-Tricks on Animations:** [https://css-tricks.com/snippets/css/keyframe-animation-syntax/](https://css-tricks.com/snippets/css/keyframe-animation-syntax/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2598,"title":"CSS Challenge:  Animated Circular Progress Bar"}]
