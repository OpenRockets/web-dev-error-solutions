[{"body":"\nThis challenge focuses on creating a responsive, multi-level nested navigation menu using CSS.  The goal is to build a menu that gracefully collapses and expands its sub-menus on smaller screens, offering a clean and intuitive user experience.  We'll utilize standard CSS for this implementation, avoiding any CSS frameworks like Tailwind CSS to emphasize fundamental CSS principles.\n\n## Description of the Styling\n\nThe navigation menu will consist of a main navigation bar containing several top-level menu items. Each top-level item can have multiple sub-items, creating a nested structure.  The styling should include:\n\n* **Top-Level Menu:**  A horizontal list of menu items with clear visual separation between them.\n* **Sub-Menus:**  Sub-menus should appear on hover (or click on smaller screens) and be visually distinct from the top-level menu.\n* **Responsiveness:**  The menu should adapt to different screen sizes, collapsing sub-menus on smaller screens to avoid cluttering the interface.  A hamburger menu icon will be used for smaller screen sizes to toggle the visibility of the menu.\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Nested Navigation Menu</title>\n<style>\nnav {\n  background-color: #333;\n  overflow: hidden;\n}\n\nnav ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\nnav li {\n  float: left;\n}\n\nnav li a {\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\nnav li a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\nnav li ul {\n  display: none; /* Initially hide sub-menus */\n  position: absolute; /* Position sub-menus absolutely */\n  background-color: #333;\n}\n\nnav li:hover > ul {\n  display: block; /* Show sub-menu on hover */\n}\n\n/* Responsiveness */\n@media screen and (max-width: 600px) {\n  nav li {\n    float: none; /* Stack menu items vertically */\n  }\n  nav li ul {\n    position: static; /* No longer need absolute positioning */\n  }\n  nav li:hover > ul { /* Remove hover effect on small screens */\n    display: none;\n  }\n    nav ul{\n        display:none;\n    }\n    nav #menuToggle{\n        display:block;\n        width:30px;\n        height:30px;\n        cursor:pointer;\n        position:relative;\n        background-color:transparent;\n        border:none;\n    }\n    #menuToggle input{\n        display:block;\n        width:40px;\n        height:32px;\n        position:absolute;\n        top: -7px;\n        left: -5px;\n        cursor:pointer;\n        opacity:0; /* hide this */\n    }\n    #menuToggle span{\n        display:block;\n        width: 30px;\n        height: 4px;\n        margin-bottom: 5px;\n        position: relative;\n        background: #fff;\n        border-radius: 3px;\n        z-index: 1;\n        transform: rotate(0);\n        transition: .25s ease-in-out;\n    }\n    #menuToggle span:nth-child(2){\n        margin-top: -5px;\n        width: 20px;\n        margin-left: 5px;\n    }\n    #menuToggle input:checked ~ span{\n        transform:rotate(45deg);\n        background: #2980b9;\n    }\n    #menuToggle input:checked ~ span:nth-child(2){\n        transform:rotate(-45deg);\n        background: #2980b9;\n        margin-left: 0px;\n    }\n    #menuToggle input:checked ~ ul{\n        display:block;\n    }\n}\n</style>\n</head>\n<body>\n\n<nav>\n  <input type=\"checkbox\" id=\"menuToggle\">\n  <label for=\"menuToggle\"><span></span><span></span><span></span></label>\n\n  <ul>\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">About</a>\n      <ul>\n        <li><a href=\"#\">Our Team</a></li>\n        <li><a href=\"#\">History</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#\">Services</a>\n        <ul>\n            <li><a href=\"#\">Service 1</a></li>\n            <li><a href=\"#\">Service 2</a></li>\n            <li><a href=\"#\">Service 3</a></li>\n        </ul>\n    </li>\n    <li><a href=\"#\">Contact</a></li>\n  </ul>\n</nav>\n\n</body>\n</html>\n```\n\n## Explanation\n\nThe CSS uses a combination of `float`, `position: absolute`, and media queries to achieve the desired effect.  The `display: none` property initially hides the sub-menus. The `:hover` pseudo-class shows the sub-menus when the parent list item is hovered over. Media queries adjust the layout for smaller screens, stacking the menu items vertically and removing the hover effect, thus employing a checkbox for toggling visibility.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Selectors:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n* **MDN Web Docs - CSS Pseudo-classes:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes)\n* **MDN Web Docs - Media Queries:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2192,"title":"CSS Challenge: Responsive Multi-level Nested Navigation Menu"}]
