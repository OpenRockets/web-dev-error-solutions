[{"body":"\nThis challenge involves creating a 3D rotating cube using only CSS.  We'll leverage CSS transforms and animations to achieve the effect.  This example uses pure CSS; no JavaScript is required.\n\n\n## Description of the Styling\n\nThe goal is to create a cube that appears to rotate smoothly on its vertical axis.  We'll achieve this by using six divs, each representing a face of the cube, positioned and rotated appropriately using `transform: rotateX()` and `transform: rotateY()`.  CSS animations will handle the continuous rotation. The cube will have distinct colors for each face to clearly illustrate the 3D effect.\n\n\n## Full Code\n\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>3D Rotating Cube</title>\n<style>\nbody {\n  perspective: 800px; /* Creates the 3D perspective */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f0f0f0;\n}\n\n.cube {\n  width: 200px;\n  height: 200px;\n  transform-style: preserve-3d; /* Essential for 3D transforms */\n  animation: rotate 8s linear infinite; /* Animate the rotation */\n}\n\n.face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  opacity: 0.8; /*add some transparency*/\n  background-size: cover;\n  backface-visibility: hidden; /* Prevents faces from showing through */\n}\n\n.front {\n  background-color: #f00;\n  transform: translateZ(100px);\n}\n\n.back {\n  background-color: #0f0;\n  transform: translateZ(-100px) rotateY(180deg);\n}\n\n.top {\n  background-color: #00f;\n  transform: translateY(-100px) rotateX(90deg);\n}\n\n.bottom {\n  background-color: #ff0;\n  transform: translateY(100px) rotateX(-90deg);\n}\n\n.left {\n  background-color: #0ff;\n  transform: translateX(-100px) rotateY(-90deg);\n}\n\n.right {\n  background-color: #f0f;\n  transform: translateX(100px) rotateY(90deg);\n}\n\n@keyframes rotate {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n</style>\n</head>\n<body>\n<div class=\"cube\">\n  <div class=\"face front\"></div>\n  <div class=\"face back\"></div>\n  <div class=\"face top\"></div>\n  <div class=\"face bottom\"></div>\n  <div class=\"face left\"></div>\n  <div class=\"face right\"></div>\n</div>\n</body>\n</html>\n```\n\n\n## Explanation\n\n* **`perspective`:** This property on the `body` creates the 3D viewing space.  Adjusting this value changes the perspective.\n* **`transform-style: preserve-3d;`:** This is crucial. It ensures that child elements (the faces) are rendered in 3D space.\n* **`translateZ()`:**  Moves the faces along the z-axis to create depth.\n* **`rotateX()` and `rotateY()`:** Rotate the faces around the x and y axes to create the cube's shape.\n* **`backface-visibility: hidden;`:**  Prevents the back faces from being visible when the front faces are in front.\n* **`@keyframes rotate`:** This defines the animation that smoothly rotates the cube.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks - 3D Transforms:** [Search \"3D Transforms\" on CSS-Tricks for numerous tutorials]\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1836,"title":"CSS Challenge:  3D Rotating Cube with CSS Animations"}]
