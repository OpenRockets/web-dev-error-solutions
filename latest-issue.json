[{"body":"\nThis challenge involves creating an animated circular progress bar using only CSS.  We'll achieve this effect using CSS animations and transformations, avoiding JavaScript entirely. The bar will be visually appealing and easily customizable for different percentages.  This example uses plain CSS; adapting it to Tailwind CSS would involve translating the classes and values.\n\n\n## Description of the Styling\n\nThe progress bar will be a circle with a background color.  A semi-circle on top will represent the progress, animating to fill the circle based on a percentage value.  We'll use `clip-path` to create the semi-circle and CSS animations to control the filling effect.  The percentage will be displayed in the center of the circle.\n\n## Full Code (CSS Only)\n\n```css\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  background-color: #f2f2f2; /* Light gray background */\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  clip-path: circle(50% at 50% 100%); /* Bottom half of the circle */\n  background-color: #4CAF50; /* Green progress color */\n  animation: progress-animation 2s linear forwards; /* Animation defined below */\n}\n\n.progress-ring span {\n  position: absolute;\n  font-size: 1.2em;\n  font-weight: bold;\n  color: white;\n}\n\n\n@keyframes progress-animation {\n  0% {\n    clip-path: circle(0% at 50% 100%);\n  }\n  100% {\n    clip-path: circle(50% at 50% 100%);\n  }\n}\n\n/* Example usage to set progress (adjust the percentage in the class name): */\n.progress-ring.progress-75::before {\n  animation: progress-animation-75 2s linear forwards;\n}\n\n@keyframes progress-animation-75 {\n  0% {\n    clip-path: circle(0% at 50% 100%);\n  }\n  100% {\n    clip-path: circle(75% at 50% 100%);\n  }\n}\n\n.progress-ring.progress-75 span {\n  content: \"75%\";\n}\n\n\n```\n\nTo use this, create a `<div>` with the class `progress-ring` and add a `<span>` inside for the percentage.  To adjust the progress, add a class like `progress-75` (or any other percentage) to the container div.\n\n\n## Explanation\n\n1. **Base Structure:** The `.progress-ring` class creates the base circular structure using `border-radius: 50%`. The `::before` pseudo-element creates the semi-circle progress indicator.\n\n2. **`clip-path`:** This property is crucial for creating the semi-circular shape. `circle(50% at 50% 100%)` creates a circle with a radius of 50% (half the width/height), positioned at the bottom (100% y-coordinate).\n\n3. **Animations:** The `@keyframes` define the animation.  It starts with a circle of 0% radius and expands to 50% (a full semi-circle) over the specified duration.  Custom percentage classes (like `progress-75`) allow for different animations using dynamic keyframes.\n\n4. **Customization:**  The colors, sizes, and animation duration can be easily changed by modifying the CSS variables.\n\n\n## Resources to Learn More\n\n* **MDN Web Docs on `clip-path`:** [https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path](https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path)\n* **MDN Web Docs on CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks on Animations:** [https://css-tricks.com/almanac/properties/a/animation/](https://css-tricks.com/almanac/properties/a/animation/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2156,"title":"CSS Challenge:  Animated Circular Progress Bar"}]
