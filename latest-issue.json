[{"body":"\nThis challenge focuses on creating a responsive layout of cards using CSS Grid or Flexbox. The goal is to achieve a multi-column layout that adapts gracefully to different screen sizes, maintaining a clean and visually appealing arrangement.  We'll use CSS Grid for this example, but a Flexbox solution is equally valid.\n\n\n## Styling Description\n\nThe layout should feature several cards arranged in a grid.  On larger screens (desktops), the cards should be displayed in a 3-column grid. As the screen size decreases (tablets and mobile), the grid should adjust to 2 columns, and finally, to a single column on the smallest screens. Each card will have a consistent size and will contain an image, a title, and a short description.\n\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Card Layout</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 20px;\n}\n\n.card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive columns */\n  grid-gap: 20px;\n}\n\n.card {\n  background-color: #f2f2f2;\n  border-radius: 5px;\n  padding: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.card img {\n  max-width: 100%;\n  height: auto;\n  margin-bottom: 10px;\n}\n\n.card h3 {\n  margin-top: 0;\n}\n</style>\n</head>\n<body>\n\n<div class=\"card-container\">\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/250x150\" alt=\"Card Image 1\">\n    <h3>Card Title 1</h3>\n    <p>This is a short description for card 1.</p>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/250x150\" alt=\"Card Image 2\">\n    <h3>Card Title 2</h3>\n    <p>This is a short description for card 2.</p>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/250x150\" alt=\"Card Image 3\">\n    <h3>Card Title 3</h3>\n    <p>This is a short description for card 3.</p>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/250x150\" alt=\"Card Image 4\">\n    <h3>Card Title 4</h3>\n    <p>This is a short description for card 4.</p>\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/250x150\" alt=\"Card Image 5\">\n    <h3>Card Title 5</h3>\n    <p>This is a short description for card 5.</p>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n## Explanation\n\nThe key to the responsive layout is the use of `grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));` within the `.card-container` class.\n\n* `repeat(auto-fit, ...)`: This tells the grid to create as many columns as will fit within the container's width.\n* `minmax(250px, 1fr)`: This defines the minimum and maximum width of each column.  `250px` ensures each card has a minimum width, while `1fr` allows the columns to share the available space equally.\n\nThis combination allows the grid to automatically adjust the number of columns based on the available screen width, resulting in a responsive layout.\n\n\n## Resources to Learn More\n\n* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Tricks - Grid:** [CSS Tricks - A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/)\n* **Flexbox Froggy:** [Flexbox Froggy](https://flexboxfroggy.com/) (While focused on Flexbox, it's excellent for understanding layout concepts)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2826,"title":"CSS Challenge: Responsive Multi-Column Card Layout"}]
