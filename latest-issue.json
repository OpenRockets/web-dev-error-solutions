[{"body":"\nThis challenge involves creating a 3D rotating cube using only CSS.  We'll achieve the 3D effect through transforms and cleverly positioned pseudo-elements.  No JavaScript is required! This example uses CSS3 properties.\n\n## Description of the Styling:\n\nThe cube will be composed of six square faces, each a different color.  These faces will be arranged to give the illusion of a cube rotating smoothly on a central axis.  The rotation will be achieved using CSS animations. We'll utilize `transform: rotateX`, `rotateY`, and `transform-style: preserve-3d` to achieve the 3D perspective.\n\n## Full Code:\n\n```css\n.cube {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  transform-style: preserve-3d;\n  animation: rotate 8s linear infinite;\n}\n\n.cube div {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  background-color: #f00; /* Default red */\n  opacity: 0.8;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  color: white;\n}\n\n.cube .front {\n  background-color: #f00;\n  transform: translateZ(50px);\n}\n\n.cube .back {\n  background-color: #00f;\n  transform: translateZ(-50px) rotateY(180deg);\n}\n\n.cube .right {\n  background-color: #0f0;\n  transform: rotateY(90deg) translateZ(50px);\n}\n\n.cube .left {\n  background-color: #ff0;\n  transform: rotateY(-90deg) translateZ(50px);\n}\n\n.cube .top {\n  background-color: #0ff;\n  transform: rotateX(90deg) translateZ(50px);\n}\n\n.cube .bottom {\n  background-color: #f0f;\n  transform: rotateX(-90deg) translateZ(50px);\n}\n\n@keyframes rotate {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n\n```\n\nAnd the HTML:\n\n```html\n<div class=\"cube\">\n  <div class=\"front\">Front</div>\n  <div class=\"back\">Back</div>\n  <div class=\"right\">Right</div>\n  <div class=\"left\">Left</div>\n  <div class=\"top\">Top</div>\n  <div class=\"bottom\">Bottom</div>\n</div>\n```\n\n\n## Explanation:\n\n* **`transform-style: preserve-3d;`**: This is crucial. It tells the browser to render the child elements in 3D space.\n* **`translateZ()`**: This moves the faces along the z-axis, creating depth.\n* **`rotateX()` and `rotateY()`**: These rotate the faces around the x and y axes, creating the cube structure.\n* **`@keyframes rotate`**: This defines the animation, smoothly rotating the cube around the y-axis.\n\n## Links to Resources to Learn More:\n\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Animations:** [MDN Web Docs - CSS Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **3D Transformations Tutorial:**  [Search for \"CSS 3D Transformations Tutorial\" on your preferred search engine for numerous tutorials.]\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1553,"title":"CSS Challenge:  3D Rotating Cube"}]
