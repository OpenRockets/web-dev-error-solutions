[{"body":"\nThis challenge involves creating a multi-level nested navigation menu using CSS.  We'll achieve a clean, expandable design suitable for a website with many sections and sub-sections.  This example will use plain CSS3;  a Tailwind CSS implementation would follow similar principles but leverage its utility classes.\n\n\n**Description of the Styling:**\n\nThe navigation menu will be a vertical list.  Top-level items will have a distinct style, and sub-level items will be indented and only visible when their parent item is hovered over.  We'll use a subtle visual cue to indicate expandable items.\n\n**Full Code (CSS3):**\n\n```css\n.nav {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav li {\n  position: relative;\n}\n\n.nav > li > a { /* Top-level links */\n  display: block;\n  padding: 10px 20px;\n  text-decoration: none;\n  color: #333;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid #ddd;\n}\n\n.nav > li > a::after { /* Expand/Collapse indicator */\n  content: \"\\25BC\"; /* Unicode for down arrow */\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.nav > li.active > a::after {\n  content: \"\\25B2\"; /* Unicode for up arrow */\n}\n\n\n.nav ul {\n  display: none;\n  position: absolute;\n  left: 20px; /* Indentation */\n  top: 100%;\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n}\n\n.nav li:hover > ul {\n  display: block;\n}\n\n.nav li:hover > a::after{\n    content: \"\\25B2\";\n}\n\n.nav > li.active > ul {\n    display: block;\n}\n```\n\n**HTML Structure (Example):**\n\n```html\n<ul class=\"nav\">\n  <li>\n    <a href=\"#\">Item 1</a>\n    <ul>\n      <li><a href=\"#\">Subitem 1.1</a></li>\n      <li><a href=\"#\">Subitem 1.2</a></li>\n    </ul>\n  </li>\n  <li class=\"active\">\n    <a href=\"#\">Item 2</a>\n    <ul>\n      <li><a href=\"#\">Subitem 2.1</a></li>\n      <li><a href=\"#\">Subitem 2.2</a></li>\n      <li><a href=\"#\">Subitem 2.3</a></li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"#\">Item 3</a>\n  </li>\n</ul>\n```\n\n**Explanation:**\n\nThe CSS uses a combination of `position: relative` and `position: absolute` to achieve the nested menu effect.  The sub-menus are initially hidden (`display: none`) and are shown using the `:hover` pseudo-class. The `::after` pseudo-element adds the expandable/collapse arrow.  The Javascript would be needed to maintain the active state on page load and potential to collapse if clicked again.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Pseudo-classes and Pseudo-elements:** [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Positioning:** [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\n* **Understanding CSS Selectors:** [freeCodeCamp](https://www.freecodecamp.org/news/css-selectors-a-complete-guide/)\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2440,"title":"CSS Challenge:  Multi-level Nested Navigation Menu"}]
