[{"body":"\nThis challenge focuses on styling a nested, multi-level unordered list to mimic an accordion effect using CSS. Each list item will expand to reveal its sub-items when clicked. We'll leverage CSS only for this, avoiding JavaScript.  This example uses standard CSS, but the principles could be easily adapted to Tailwind CSS.\n\n\n## Description of the Styling:\n\nThe styling aims for a clean, modern look.  We'll use a subtle background color change to indicate the open/closed state of the list items.  Sub-levels will be indented with appropriate padding and potentially different bullet styles.  The overall design will be responsive, adapting gracefully to different screen sizes.\n\n\n## Full Code:\n\n```css\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\nli {\n  cursor: pointer;\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n}\n\nli > ul {\n  display: none; /* Initially hide sub-lists */\n  padding-left: 20px; /* Indent sub-lists */\n}\n\nli.active > ul {\n  display: block; /* Show sub-list when parent is active */\n}\n\nli:before {\n  content: \"\\25BC\"; /* Unicode for a down triangle */\n  margin-right: 5px;\n  display: inline-block;\n}\n\nli.active:before {\n  content: \"\\25B2\"; /* Unicode for an up triangle */\n}\n\nli:hover {\n  background-color: #f0f0f0;\n}\n\nli.active {\n  background-color: #e0e0e0;\n}\n\n/*Optional Styling for Different Levels*/\nli ul li:before {\n  content: \"\\2022\"; /* Bullet Point */\n  margin-right:5px;\n}\n```\n\n```html\n<ul>\n  <li>Item 1\n    <ul>\n      <li>Sub-item 1.1</li>\n      <li>Sub-item 1.2\n        <ul>\n          <li>Sub-sub-item 1.2.1</li>\n          <li>Sub-sub-item 1.2.2</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>Item 2</li>\n  <li>Item 3\n    <ul>\n      <li>Sub-item 3.1</li>\n    </ul>\n  </li>\n</ul>\n\n<script>\n  const listItems = document.querySelectorAll('li');\n\n  listItems.forEach(item => {\n    item.addEventListener('click', () => {\n      item.classList.toggle('active');\n    });\n  });\n</script>\n```\n\n## Explanation:\n\nThe CSS uses the `display: none;` property to initially hide the sub-lists.  The `li.active > ul { display: block; }` rule shows the sub-list when the parent `li` has the `active` class.  The JavaScript code toggles this `active` class on click, creating the accordion effect.  The `:before` pseudo-element is used to add the triangle icons, changing based on the active state.\n\n\n## Links to Resources to Learn More:\n\n* **CSS Selectors:**  [MDN Web Docs - CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors) - Learn about different types of CSS selectors to better target elements.\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements) -  Understand how to use `:before` and `:after` to add content to elements.\n* **CSS Display Property:** [MDN Web Docs - display property](https://developer.mozilla.org/en-US/docs/Web/CSS/display) - Learn how to control the visibility and layout of elements.\n* **JavaScript Event Listeners:** [MDN Web Docs - AddEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) -  Understand how to add event listeners to elements.\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2484,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordion"}]
