[{"body":"\nThis challenge focuses on creating a responsive three-column layout using CSS.  The layout should include a sticky header that remains at the top of the viewport during scrolling, and a footer that remains fixed at the bottom.  We'll use plain CSS for this example, showcasing fundamental layout techniques.\n\n**Description of the Styling:**\n\nThe design consists of three columns of equal width on larger screens.  On smaller screens, the columns stack vertically.  A header is fixed to the top, and a footer is fixed to the bottom.  Basic styling is applied to give each section some visual separation.  We aim for a clean, minimalist aesthetic.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Three-Column Layout</title>\n<style>\nbody {\n  margin: 0;\n  font-family: sans-serif;\n}\n\nheader {\n  background-color: #f0f0f0;\n  padding: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 1000; /* Ensure it stays above other content */\n}\n\nmain {\n  display: flex;\n  flex-wrap: wrap; /* Allow columns to wrap on smaller screens */\n}\n\n.column {\n  flex: 1 0 33%; /* Each column takes 33% width, 1 is flex-grow, 0 is flex-shrink */\n  padding: 1rem;\n  box-sizing: border-box; /* Include padding in element width */\n}\n\nfooter {\n  background-color: #f0f0f0;\n  padding: 1rem;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  text-align: center; /* Center the footer content */\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .column {\n    flex: 1 0 100%; /* Full width on smaller screens */\n  }\n}\n</style>\n</head>\n<body>\n\n<header>\n  <h1>My Three-Column Layout</h1>\n</header>\n\n<main>\n  <div class=\"column\">\n    <h2>Column 1</h2>\n    <p>Some content for column 1.</p>\n  </div>\n  <div class=\"column\">\n    <h2>Column 2</h2>\n    <p>Some content for column 2.</p>\n  </div>\n  <div class=\"column\">\n    <h2>Column 3</h2>\n    <p>Some content for column 3.</p>\n  </div>\n</main>\n\n<footer>\n  <p>&copy; 2024 My Website</p>\n</footer>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **`position: sticky` for the header:** This makes the header stay fixed at the top once the user scrolls past its initial position.  `z-index` ensures it stays above other content.\n* **`display: flex` for the main section:** This enables flexible box layout, allowing easy column creation.  `flex-wrap: wrap` handles responsiveness.\n* **`flex: 1 0 33%;` for columns:** This divides the available space equally among the three columns.  `1` allows columns to grow if content expands, `0` prevents shrinking below 33%, and `33%` sets the initial width.\n* **`box-sizing: border-box;`:** This crucial line ensures that padding and borders are included within the element's total width, preventing unexpected layout issues.\n* **`@media (max-width: 768px)`:** This media query adjusts the layout for smaller screens, making the columns stack vertically.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Flexbox:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox)\n* **CSS Positioning:** [https://developer.mozilla.org/en-US/docs/Web/CSS/position](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\n* **CSS Media Queries:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2535,"title":"CSS Challenge:  Three-Column Layout with Sticky Header and Footer"}]
