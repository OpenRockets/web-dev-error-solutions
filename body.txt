
This challenge involves creating a card that expands smoothly when hovered over, revealing more content. We'll use CSS3 transitions and transforms to achieve this effect.  No JavaScript is required.


## Description of the Styling

The card will have a basic layout: a header, a main content area, and a button.  On hover, the card will increase in height, revealing the initially hidden content.  We'll use a smooth transition to make the animation look pleasing.  The styling will incorporate a subtle shadow to give the card depth.


## Full Code (CSS only)

```css
.card {
  width: 300px;
  background-color: #f2f2f2;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden; /* Hide content initially outside of the card */
  transition: height 0.3s ease-in-out; /* Smooth transition for height change */
}

.card-header {
  background-color: #4CAF50;
  color: white;
  padding: 15px;
  text-align: center;
}

.card-content {
  padding: 15px;
  height: 0; /* Initially hidden */
  overflow: hidden; /* Hide the overflow when initially collapsed */
  transition: height 0.3s ease-in-out; /* Smooth transition for height change */
}

.card:hover .card-content {
  height: 150px; /* Height on hover */
}

.card-button {
  background-color: #4CAF50;
  color: white;
  border: none;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 5px;
}
```

To use this CSS, you'll need to structure your HTML like this:

```html
<div class="card">
  <div class="card-header">Card Title</div>
  <div class="card-content">
    <p>This is the content that will be revealed on hover.</p>
    <button class="card-button">Learn More</button>
  </div>
</div>
```


## Explanation

* **`transition: height 0.3s ease-in-out;`**: This line is crucial for the animation. It tells the browser to smoothly transition the `height` property over 0.3 seconds using an "ease-in-out" timing function (for a smooth acceleration and deceleration).  This is applied to both the `.card` and `.card-content` classes to coordinate the expansion.

* **`height: 0;` and `overflow: hidden;`**:  These are used on the `.card-content` to initially hide the content. The `overflow: hidden` prevents any content from spilling out during the transition.

* **`.card:hover .card-content { height: 150px; }`**: This selector targets the `.card-content` element *only* when the parent `.card` element is hovered.  It sets the height to 150px, triggering the animation.  Adjust the `150px` value to control the final height of the expanded card.

* **`overflow: hidden;` on `.card`**: This prevents any content from overflowing the card boundaries during expansion.


## Links to Resources to Learn More

* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)
* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)
* **CSS-Tricks (general CSS resources):** [https://css-tricks.com/](https://css-tricks.com/)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

