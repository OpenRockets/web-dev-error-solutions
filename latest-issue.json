[{"body":"\nThis challenge focuses on creating a visually appealing, multi-level nested list using CSS (specifically CSS3) where each list item acts as an accordion, revealing its sub-items on click.  We'll achieve this using only CSS, avoiding JavaScript for enhanced performance and simplicity.\n\n## Styling Description:\n\nThe styling aims for a clean, modern look.  Each top-level list item will have a distinct background color and a \"+\" or \"-\" icon to indicate the expansion state. Sub-levels will be progressively indented and use a lighter background color.  The overall structure will be easy to read and understand.  We'll utilize CSS transitions for smooth animations.\n\n## Full Code:\n\n```css\n/* Style for the main list container */\n.accordion-list {\n  list-style: none;\n  padding: 0;\n  margin: 20px;\n}\n\n/* Style for top-level list items */\n.accordion-list > li {\n  background-color: #f0f0f0;\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: 1px solid #ddd;\n  transition: background-color 0.3s ease; /* Smooth transition for hover */\n}\n\n/* Style for top-level list items when hovered */\n.accordion-list > li:hover {\n  background-color: #e0e0e0;\n}\n\n/* Style for the plus/minus icon */\n.accordion-list > li .icon {\n  float: right;\n  font-size: 1.2em;\n  transition: transform 0.3s ease; /* Smooth transition for icon rotation */\n}\n\n/* Style for sub-level list items */\n.accordion-list > li ul {\n  list-style: none;\n  padding-left: 20px;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease; /* Smooth transition for height change */\n}\n\n/* Style for open list items */\n.accordion-list > li.open ul {\n  max-height: 200px; /* Adjust as needed */\n}\n\n/* Style for open list items' icons */\n.accordion-list > li.open .icon {\n  transform: rotate(90deg);\n}\n\n/* Style for nested levels, progressively lighter */\n.accordion-list li ul li {\n  background-color: #fafafa;\n}\n\n.accordion-list li ul li ul li {\n  background-color: #fcfcfc;\n}\n```\n\n```html\n<ul class=\"accordion-list\">\n  <li>\n    <span class=\"icon\">+</span>Item 1\n    <ul>\n      <li>Sub-item 1.1</li>\n      <li>Sub-item 1.2\n        <ul>\n          <li>Sub-sub-item 1.2.1</li>\n          <li>Sub-sub-item 1.2.2</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <span class=\"icon\">+</span>Item 2\n    <ul>\n      <li>Sub-item 2.1</li>\n      <li>Sub-item 2.2</li>\n    </ul>\n  </li>\n  <li>\n    <span class=\"icon\">+</span>Item 3</li>\n</ul>\n\n<script>\n  const accordionItems = document.querySelectorAll('.accordion-list > li');\n  accordionItems.forEach(item => {\n    item.addEventListener('click', () => {\n      item.classList.toggle('open');\n      item.querySelector('.icon').textContent = item.classList.contains('open') ? '-' : '+';\n    });\n  });\n</script>\n```\n\n## Explanation:\n\nThe CSS uses `max-height` and transitions to control the height of the sub-lists, creating the accordion effect. The `open` class is toggled on click, changing the `max-height` and the icon.  The JavaScript portion is minimal and only handles toggling the `open` class and updating the plus/minus icon.  This is a pure CSS solution for simpler nested lists and more complex list will require JavaScript libraries or frameworks to make the functionality more robust.\n\n## Resources to Learn More:\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Selectors:** [MDN Web Docs - CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n* **Understanding the Box Model:** [CSS-Tricks - Understanding the Box Model](https://css-tricks.com/box-sizing/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2776,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordions"}]
