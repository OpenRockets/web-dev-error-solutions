[{"body":"\nThis challenge involves creating a visually appealing tessellation of hexagons using CSS.  We'll achieve this effect using only CSS, avoiding the need for images or JavaScript.  The styling will focus on creating a clean, modern design with a subtle color palette.  We'll use CSS variables for easy customization.\n\n\n## Description of the Styling\n\nThe design features a grid of hexagons, each slightly rotated to achieve the tessellation.  We'll utilize the `::before` and `::after` pseudo-elements to create the hexagonal shape using borders and transforms. Each hexagon will have a slightly different shade of a base color, creating a subtle depth effect.\n\n## Full Code (CSS Only)\n\n```css\n:root {\n  --hex-color: #4CAF50; /* Base hexagon color */\n  --hex-size: 100px;   /* Size of the hexagon */\n}\n\n.hexagon-container {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr); /* Adjust for desired number of columns */\n  grid-gap: 10px;\n  width: fit-content;\n}\n\n.hexagon {\n  width: var(--hex-size);\n  height: calc(var(--hex-size) * 0.866); /* Height based on equilateral triangle */\n  background-color: var(--hex-color);\n  position: relative;\n  margin: auto;\n  transform: rotate(30deg); /* Rotate for tessellation */\n}\n\n.hexagon::before,\n.hexagon::after {\n  content: \"\";\n  position: absolute;\n  width: inherit;\n  height: inherit;\n  background-color: inherit;\n  transform: rotate(60deg) scale(0.866);\n  /* lighter color */\n}\n\n.hexagon::before{\n    background-color: var(--hex-color);\n    opacity: 0.8;\n}\n\n.hexagon::after{\n    background-color: var(--hex-color);\n    opacity: 0.6;\n}\n\n/* Add variation in color - optional, you could also add random classes */\n.hexagon:nth-child(2n) {\n  background-color: #558B2F;\n}\n.hexagon:nth-child(3n) {\n  background-color: #689F38;\n}\n.hexagon:nth-child(4n) {\n  background-color: #7CB341;\n}\n```\n\n\nTo use this code, create a `div` with the class `hexagon-container` and add multiple `div` elements with the class `hexagon` inside. Adjust the `grid-template-columns` property in `.hexagon-container` to control the number of hexagons per row.\n\n\n## Explanation\n\n* **CSS Variables:**  Using `--hex-color` and `--hex-size` allows for easy customization of the hexagon's color and size.\n* **Grid Layout:** The `grid` layout makes arranging the hexagons simple and responsive.\n* **Pseudo-elements:** `::before` and `::after` create the hexagonal shape by overlapping rotated elements.\n* **Transformations:** `rotate` and `scale` are used to create the hexagonal shape and tessellation.\n* **nth-child selector:** To showcase how to add variation we use nth child selectors to change colors.  This is just an example, more complex variations could be implemented.\n\n\n## Resources to Learn More\n\n* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1886,"title":"CSS Challenge:  Tessellating Hexagons"}]
