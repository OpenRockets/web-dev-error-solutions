[{"body":"\nThis challenge involves creating a responsive navigation bar that adapts to different screen sizes using CSS.  For smaller screens, a hamburger menu will be used to reveal the navigation links. We will use plain CSS3 for this example, avoiding any CSS frameworks like Tailwind CSS to focus on fundamental concepts.\n\n**Description of the Styling:**\n\nThe navigation bar will be a fixed-width element centered horizontally. On larger screens (above 768px), the navigation links will be displayed inline.  On smaller screens, the navigation links will be hidden by default, and a hamburger icon will be visible. Clicking the hamburger icon will toggle the visibility of the navigation links.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Navigation Bar</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 0;\n}\n\n.navbar {\n  background-color: #333;\n  overflow: hidden;\n}\n\n.navbar a {\n  float: left;\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 20px;\n  text-decoration: none;\n}\n\n.navbar a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n.navbar .hamburger {\n  display: none; /* Hidden on larger screens */\n  cursor: pointer;\n  float: right;\n  padding: 14px 20px;\n}\n\n.navbar .hamburger span {\n  display: block;\n  height: 2px;\n  width: 25px;\n  background-color: white;\n  margin: 5px 0;\n}\n\n/* Style for smaller screens */\n@media screen and (max-width: 768px) {\n  .navbar a:not(:first-child) {\n    display: none;\n  }\n\n  .navbar .hamburger {\n    display: block;\n  }\n\n  .navbar.active a:not(:first-child){\n    display: block;\n  }\n}\n\n/* JavaScript to toggle the menu */\n</style>\n</head>\n<body>\n\n<div class=\"navbar\" id=\"myNavbar\">\n  <a href=\"#\">Home</a>\n  <a href=\"#\">About</a>\n  <a href=\"#\">Services</a>\n  <a href=\"#\">Contact</a>\n  <div class=\"hamburger\" onclick=\"toggleNavbar()\">\n    <span></span>\n    <span></span>\n    <span></span>\n  </div>\n</div>\n\n<script>\nfunction toggleNavbar() {\n  document.getElementById(\"myNavbar\").classList.toggle(\"active\");\n}\n</script>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **CSS:** We use `float` for horizontal alignment of links, `display: none;`  to hide elements, and `@media` queries for responsive design.  The hamburger menu is styled with spans to create the three-line effect.\n* **JavaScript:**  A simple JavaScript function toggles the `active` class on the navbar, which changes the display style of the navigation links using CSS.\n\n**Links to Resources to Learn More:**\n\n* **CSS Media Queries:** [https://www.w3schools.com/cssref/css3_pr_mediaquery.asp](https://www.w3schools.com/cssref/css3_pr_mediaquery.asp)\n* **CSS Flexbox (alternative layout method):** [https://css-tricks.com/snippets/css/a-guide-to-flexbox/](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n* **CSS Grid (another alternative layout method):** [https://css-tricks.com/snippets/css/complete-guide-grid/](https://css-tricks.com/snippets/css/complete-guide-grid/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2936,"title":"CSS Challenge:  Responsive Navigation Bar with a Hamburger Menu"}]
