[{"body":"\nThis challenge focuses on creating a responsive pricing table using CSS.  We'll aim for a clean, modern design that adapts well to different screen sizes.  This example utilizes plain CSS, but the principles can easily be adapted to frameworks like Tailwind CSS.\n\n\n**Description of the Styling:**\n\nThe pricing table will consist of three pricing plans (Basic, Pro, and Premium). Each plan will have a title, a list of features, a price, and a call-to-action button. The table will be horizontally scrollable on smaller screens to ensure all content is visible.  We'll use a clean and visually appealing color scheme.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Pricing Table</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.pricing-table {\n  display: flex;\n  overflow-x: auto; /* Enable horizontal scrolling on smaller screens */\n}\n\n.pricing-plan {\n  width: 300px; /* Adjust width as needed */\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin: 10px;\n  padding: 20px;\n  box-shadow: 2px 2px 5px rgba(0,0,0,0.1);\n}\n\n.pricing-plan h2 {\n  margin-top: 0;\n}\n\n.pricing-plan ul {\n  list-style: none;\n  padding: 0;\n}\n\n.pricing-plan li {\n  margin-bottom: 10px;\n}\n\n.pricing-plan .price {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.pricing-plan button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* Media query for smaller screens */\n@media (max-width: 768px) {\n  .pricing-table {\n    flex-direction: column; /* Stack plans vertically */\n    overflow-x: hidden; /* No horizontal scroll needed */\n  }\n  .pricing-plan {\n    width: 100%; /* Full width on smaller screens */\n    margin: 0 10px 20px; /* Adjust margins */\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"pricing-table\">\n  <div class=\"pricing-plan\">\n    <h2>Basic</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n    </ul>\n    <p class=\"price\">$9/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"pricing-plan\">\n    <h2>Pro</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n    </ul>\n    <p class=\"price\">$19/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"pricing-plan\">\n    <h2>Premium</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n      <li>Feature 6</li>\n    </ul>\n    <p class=\"price\">$29/month</p>\n    <button>Sign Up</button>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* The `pricing-table` uses `flexbox` for easy arrangement and `overflow-x: auto` to allow horizontal scrolling when needed.\n* Individual `pricing-plan` divs are styled with borders, padding, and shadows for visual appeal.\n* A media query (`@media (max-width: 768px)`) adjusts the layout for smaller screens, stacking the plans vertically.\n* CSS is used for styling all elements to achieve a consistent design.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Flexbox:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout)\n* **CSS Media Queries:** [https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n* **CSS Grid Layout (alternative layout method):** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2461,"title":"CSS Challenge: Responsive Pricing Table"}]
