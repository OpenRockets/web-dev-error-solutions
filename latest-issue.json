[{"body":"\nThis challenge focuses on creating a multi-level nested accordion using Tailwind CSS.  The goal is to build an expandable/collapsible structure where parent sections can contain child sections, all with smooth transitions and clean styling.  This requires utilizing Tailwind's utility classes for styling and JavaScript for the interactive functionality.\n\n**Description of the Styling:**\n\nThe accordion will use a clean and modern design.  Each accordion item will have a header with a title and a plus/minus icon to indicate expansion.  The content area will slide down smoothly upon expansion.  The overall styling will be consistent with Tailwind's default aesthetic, maintaining a clean and responsive layout.  Nested accordions will be visually indented to clearly show the hierarchical structure.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Nested Accordion</title>\n<script src=\"https://cdn.tailwindcss.com\"></script>\n<script>\n  function toggleAccordion(id) {\n    const content = document.getElementById(id + \"-content\");\n    const icon = document.getElementById(id + \"-icon\");\n    content.classList.toggle('hidden');\n    icon.classList.toggle('rotate-90');\n  }\n</script>\n</head>\n<body class=\"bg-gray-100\">\n\n<div class=\"container mx-auto p-4\">\n\n  <div class=\"accordion\">\n    <div class=\"accordion-item bg-white rounded-lg shadow-md p-4 mb-4\">\n      <div class=\"flex justify-between items-center cursor-pointer\" onclick=\"toggleAccordion('item1')\">\n        <h3 id=\"item1-header\" class=\"text-lg font-medium\">Item 1</h3>\n        <svg id=\"item1-icon\" class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n        </svg>\n      </div>\n      <div id=\"item1-content\" class=\"hidden mt-2\">\n        <p>Content for Item 1.</p>\n        <div class=\"ml-4\">\n          <div class=\"accordion-item bg-gray-200 rounded-lg shadow-md p-4 mb-4\">\n            <div class=\"flex justify-between items-center cursor-pointer\" onclick=\"toggleAccordion('item1-1')\">\n              <h4 id=\"item1-1-header\" class=\"text-base font-medium\">Sub-item 1.1</h4>\n              <svg id=\"item1-1-icon\" class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n              </svg>\n            </div>\n            <div id=\"item1-1-content\" class=\"hidden mt-2\">\n              <p>Content for Sub-item 1.1</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"accordion-item bg-white rounded-lg shadow-md p-4 mb-4\">\n      <div class=\"flex justify-between items-center cursor-pointer\" onclick=\"toggleAccordion('item2')\">\n        <h3 id=\"item2-header\" class=\"text-lg font-medium\">Item 2</h3>\n        <svg id=\"item2-icon\" class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n        </svg>\n      </div>\n      <div id=\"item2-content\" class=\"hidden mt-2\">\n        <p>Content for Item 2.</p>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n*   The HTML utilizes Tailwind classes for styling elements like `bg-white`, `rounded-lg`, `shadow-md`, `flex`, `justify-between`, etc.  These classes handle spacing, borders, shadows, and layout.\n*   JavaScript functions `toggleAccordion` handle the show/hide logic, toggling the `hidden` class on the content and rotating the arrow icon.\n*   The SVG icons provide visual cues for expansion/collapse.\n*   The nesting of accordion items demonstrates the hierarchical structure.  Each nested accordion is styled similarly using Tailwind classes, maintaining consistency.\n\n**Links to Resources to Learn More:**\n\n*   **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)\n*   **Learn more about Accordions:** [Numerous tutorials available on YouTube and other websites.  Search for \"CSS accordion tutorial\"]\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2794,"title":"CSS Challenge:  Multi-level Nested Accordion with Tailwind CSS"}]
