[{"body":"\nThis challenge involves creating an animated circular progress bar using Tailwind CSS.  The progress bar will visually represent a percentage value, updating smoothly as the percentage changes. We'll use CSS variables and animations to achieve a clean and efficient solution.\n\n**Description of the Styling:**\n\nThe progress bar will be a circle with a background color.  A semi-circle overlay will represent the progress, filling in from the right. The percentage value will be displayed in the center of the circle.  The animation will involve the semi-circle smoothly expanding or contracting to reflect the percentage change.  We'll leverage Tailwind's utility classes for easy styling and responsive design.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Circular Progress Bar</title>\n<script src=\"https://cdn.tailwindcss.com\"></script>\n<style>\n  .progress-ring {\n    --progress: 0; /*initial value*/\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    background-color: #e0e0e0;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation: animateProgress 2s forwards; /*animation to start*/\n  }\n\n  .progress-ring::before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #4299E1;\n    clip: rect(0, 50%, 100%, 0); /*half circle*/\n    transform: rotate(calc(var(--progress) * 3.6deg));\n    transform-origin: 50% 100%; /*rotation point*/\n    animation: animateProgress 2s forwards;\n  }\n\n  .progress-ring .percentage {\n    z-index: 1; /*make sure text is visible above the semi-circle*/\n    font-size: 1.2rem;\n    color: #fff;\n  }\n\n\n  @keyframes animateProgress{\n    from {--progress: 0}\n    to {--progress: var(--percentage)}\n  }\n</style>\n</head>\n<body class=\"bg-gray-100 flex justify-center items-center h-screen\">\n  <div class=\"progress-ring\" style=\"--percentage: 75\">  <!--Change this value to adjust initial percentage-->\n    <span class=\"percentage\">75%</span>\n  </div>\n\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **Tailwind Classes:** We use `bg-gray-100`, `flex`, `justify-center`, `items-center`, and `h-screen` for basic layout and styling.\n* **CSS Variables:** `--progress` dynamically controls the animation, representing the percentage converted into degrees. `--percentage` is a custom property that sets the target percentage.\n\n* **Pseudo-element `::before`:** This creates the semi-circle that visually represents the progress. `clip` creates the semi-circle shape. `transform: rotate()`  rotates it based on the `--progress` value.\n\n\n* **`animateProgress` Keyframes:** This animation smoothly updates the `--progress` variable, driving the progress bar animation.\n\n\n* **Javascript (Optional):**  You can easily integrate JavaScript to dynamically change the `--percentage` CSS variable, allowing for real-time progress updates.\n\n\n**Links to Resources to Learn More:**\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)\n* **CSS Variables (Custom Properties):** [https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)\n* **CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2604,"title":"CSS Challenge:  Animated Circular Progress Bar with Tailwind CSS"}]
