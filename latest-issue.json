[{"body":"\nThis challenge involves creating a 3D rotating cube using only CSS.  We'll achieve the 3D effect using transforms and animations, creating a visually appealing and interactive element. We will use standard CSS3 properties for this challenge, showcasing techniques applicable to a wide range of projects.\n\n\n**Description of the Styling:**\n\nThe cube will consist of six square divs, each representing a face. These faces will be positioned and rotated using CSS `transform` properties to create the 3D effect.  A CSS animation will then continuously rotate the cube around its Y-axis.  Each face will have a different background color for clear visual distinction.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>3D Rotating Cube</title>\n<style>\n.container {\n  width: 200px;\n  height: 200px;\n  perspective: 800px; /* Creates the 3D perspective */\n  margin: 50px auto;\n}\n\n.cube {\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d; /* Essential for 3D transformations */\n  animation: rotate 8s linear infinite; /* Continuous rotation */\n}\n\n.face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden; /* Prevents back faces from showing */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n  color: white;\n}\n\n.face-front { background-color: #f00; }\n.face-right { background-color: #0f0; transform: rotateY(90deg) translateZ(100px); }\n.face-back { background-color: #00f; transform: rotateY(180deg) translateZ(100px); }\n.face-left { background-color: #ff0; transform: rotateY(-90deg) translateZ(100px); }\n.face-top { background-color: #0ff; transform: rotateX(90deg) translateZ(100px); }\n.face-bottom { background-color: #f0f; transform: rotateX(-90deg) translateZ(100px); }\n\n\n@keyframes rotate {\n  from { transform: rotateY(0deg); }\n  to { transform: rotateY(360deg); }\n}\n</style>\n</head>\n<body>\n\n<div class=\"container\">\n  <div class=\"cube\">\n    <div class=\"face face-front\">Front</div>\n    <div class=\"face face-right\">Right</div>\n    <div class=\"face face-back\">Back</div>\n    <div class=\"face face-left\">Left</div>\n    <div class=\"face face-top\">Top</div>\n    <div class=\"face face-bottom\">Bottom</div>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **`perspective`:** This property on the container creates the 3D viewing space.\n* **`transform-style: preserve-3d;`:** This is crucial; it ensures that child elements are rendered in 3D space.\n* **`backface-visibility: hidden;`:** This hides the back of each face, preventing visual artifacts.\n* **`rotateY` and `translateZ`:** These are used to position and rotate each face to form the cube.  `translateZ` moves the faces along the z-axis, creating depth.\n* **`@keyframes rotate`:** This defines the animation, smoothly rotating the cube around its Y-axis.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks - 3D Transforms:** (Search \"CSS-Tricks 3D Transforms\" on Google for relevant tutorials)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2846,"title":"CSS Challenge:  3D Rotating Cube with CSS Animations"}]
