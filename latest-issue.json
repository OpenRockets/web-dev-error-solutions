[{"body":"\nThis challenge involves creating a nested, multi-level list where each parent list item acts as an accordion, revealing or hiding its child list items upon clicking. We'll use CSS3 for the styling and achieve the accordion effect without JavaScript.\n\n**Description of the Styling:**\n\nThe styling will focus on creating a clean and visually appealing nested list. We'll use a subtle background color to distinguish list items, padding for readability, and a plus/minus icon to indicate whether a section is expanded or collapsed. The accordion effect will be achieved by using CSS to toggle the height of the child list elements.  We'll strive for a modern and responsive design.\n\n**Full Code (CSS only):**\n\n```css\n/* Styles for the overall list */\n.accordion-list {\n  list-style: none;\n  padding: 0;\n  margin: 20px;\n}\n\n.accordion-list li {\n  background-color: #f4f4f4;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.accordion-list li > ul {\n  list-style: disc;\n  padding-left: 20px;\n  max-height: 0; /* Initially collapsed */\n  overflow: hidden;\n  transition: max-height 0.3s ease-out; /* Smooth transition */\n}\n\n/* Style for the plus/minus icon */\n.accordion-list li::before {\n  content: \"+\";\n  display: inline-block;\n  width: 20px;\n  text-align: center;\n  margin-right: 10px;\n}\n\n/* Style when list item is expanded */\n.accordion-list li.active > ul {\n  max-height: 200px; /* Adjust as needed */\n}\n\n.accordion-list li.active::before {\n  content: \"-\";\n}\n\n\n/* Responsive adjustments (optional) */\n@media (max-width: 768px) {\n  .accordion-list li {\n    font-size: 14px;\n  }\n}\n```\n\n**HTML Structure (Example):**\n\n```html\n<ul class=\"accordion-list\">\n  <li>Item 1\n    <ul>\n      <li>Subitem 1.1</li>\n      <li>Subitem 1.2</li>\n    </ul>\n  </li>\n  <li>Item 2\n    <ul>\n      <li>Subitem 2.1</li>\n      <li>Subitem 2.2\n        <ul>\n          <li>Sub-subitem 2.2.1</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>Item 3</li>\n</ul>\n\n<script>\n  const accordions = document.querySelectorAll('.accordion-list li');\n  accordions.forEach(item => {\n    item.addEventListener('click', () => {\n      item.classList.toggle('active');\n    });\n  });\n</script>\n```\n\n**Explanation:**\n\nThe CSS uses `max-height` and `transition` to create the accordion effect.  Initially, the child `<ul>` elements have `max-height: 0;` making them collapsed.  When a list item is clicked, JavaScript toggles the `active` class, which changes the `max-height` to a defined value, smoothly revealing the child list items. The `::before` pseudo-element adds the plus/minus icon.  The provided JavaScript is simple and adds the 'active' class on click.  This can be expanded upon for more complex behavior if needed.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS Pseudo-elements:** [MDN Web Docs - Pseudo-elements](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)\n* **JavaScript Event Listeners:** [MDN Web Docs - Event Listeners](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2161,"title":"CSS Challenge:  Multi-level Nested List with Accordion Effect"}]
