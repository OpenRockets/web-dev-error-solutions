[{"body":"\nThis challenge focuses on building a responsive hamburger menu using Tailwind CSS. The menu should be neatly stacked vertically on smaller screens and transition smoothly to a horizontal navigation bar on larger screens.  We'll leverage Tailwind's utility classes for efficient styling and responsiveness.\n\n\n**Description of the Styling:**\n\nThe menu will consist of a hamburger icon that toggles the visibility of a navigation list.  The list items will be styled with consistent spacing and padding.  On larger screens (above `md` breakpoint), the menu items will be displayed inline, creating a horizontal navigation bar.  We will utilize Tailwind's responsive modifiers to achieve this layout.  The hamburger icon will be hidden on larger screens.  The overall design aims for a clean and modern look.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <title>Responsive Hamburger Menu</title>\n</head>\n<body class=\"bg-gray-100\">\n\n  <nav class=\"bg-gray-800\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex items-center justify-between h-16\">\n        <div class=\"flex items-center\">\n          <a href=\"#\" class=\"text-white font-bold text-xl\">My Website</a>\n        </div>\n        <div class=\"flex items-center md:hidden\">\n          <button class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" aria-expanded=\"false\">\n            <svg class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n            </svg>\n            <svg class=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n            </svg>\n          </button>\n        </div>\n        <div class=\"hidden md:block\">\n          <div class=\"flex space-x-8\">\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Home</a>\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">About</a>\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Services</a>\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Contact</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile menu -->\n    <div class=\"md:hidden\">\n      <div class=\"px-2 pt-2 pb-3 space-y-1\">\n        <a href=\"#\" class=\"bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium\">Home</a>\n        <a href=\"#\" class=\"bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium\">About</a>\n        <a href=\"#\" class=\"bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium\">Services</a>\n        <a href=\"#\" class=\"bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium\">Contact</a>\n      </div>\n    </div>\n  </nav>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* **Tailwind Classes:** The code heavily uses Tailwind CSS utility classes for styling.  For instance, `bg-gray-800` sets the background color, `flex` enables flexbox layout, `items-center` centers items vertically, and `justify-between` distributes space between items horizontally.\n* **Responsiveness:**  `md:hidden` and `hidden md:block` are responsive modifiers that control the visibility of elements based on the screen size (using Tailwind's breakpoint system).\n* **Hamburger Icon:**  The SVG code creates the hamburger icon, and JavaScript (not included here for simplicity but easily added) would be needed to toggle its state (open/close) and the visibility of the mobile menu.\n* **Structure:** The code is structured to clearly separate the desktop navigation and the mobile menu, making it maintainable and easy to understand.\n\n\n**Links to Resources to Learn More:**\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)\n* **Learn CSS Grid:** [Various online tutorials available](Search \"Learn CSS Grid\" on your preferred search engine)  (While this example doesn't use grid, understanding grid is valuable for layout)\n* **Learn Responsive Web Design:** [Various online tutorials available](Search \"Responsive Web Design\" on your preferred search engine)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2800,"title":"CSS Challenge:  Responsive Hamburger Menu with Tailwind CSS"}]
