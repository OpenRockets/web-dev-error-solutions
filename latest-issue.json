[{"body":"\nThis challenge involves creating a card that expands smoothly when hovered over, revealing additional content.  We'll use CSS3 transitions and transforms to achieve this effect.  No JavaScript is required.\n\n**Description of the Styling:**\n\nThe card will have a simple, clean design. When the mouse hovers over the card, it will smoothly expand horizontally, revealing a hidden section with more details.  The expansion will be accompanied by a subtle fade-in effect for the additional content. We will use a simple gradient background for visual appeal.\n\n\n**Full Code (CSS only):**\n\n```css\n.card {\n  background: linear-gradient(to right, #4CAF50, #8BC34A);\n  width: 300px;\n  height: 150px;\n  border-radius: 8px;\n  overflow: hidden; /* Hide the extra content initially */\n  transition: width 0.3s ease-in-out, transform 0.3s ease-in-out; /* Smooth transitions */\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Add a subtle shadow */\n  display: flex;\n  flex-direction: column; /* Align items vertically */\n  justify-content: center;\n  align-items: center; /* Center content */\n  color: white;\n  text-align: center;\n}\n\n.card:hover {\n  width: 500px; /* Expand on hover */\n  transform: translateX(-100px); /* Adjust position to avoid overflowing */\n}\n\n.card-content {\n  opacity: 0; /* Initially hidden */\n  transition: opacity 0.3s ease-in-out; /* Fade-in transition */\n}\n\n.card:hover .card-content {\n  opacity: 1; /* Fade in on hover */\n}\n\n.card-title {\n    font-size: 1.5em;\n    margin-bottom: 0.5em;\n}\n\n.card-description {\n    font-size: 1em;\n}\n```\n\n**HTML Structure (example):**\n\n```html\n<div class=\"card\">\n  <h2 class=\"card-title\">Card Title</h2>\n  <p class=\"card-description\">Short description here.</p>\n  <div class=\"card-content\">\n    <p>This is the additional content that appears on hover.</p>\n    <p>More details can go here.</p>\n  </div>\n</div>\n```\n\n\n**Explanation:**\n\n* **`transition` property:** This is crucial for the animation.  It specifies which properties (`width`, `transform`) will be animated, the duration (`0.3s`), and the easing function (`ease-in-out`).\n* **`transform: translateX(-100px)`:** This shifts the card to the left when expanded to prevent it from overflowing its initial container. Adjust this value based on your design.\n* **`overflow: hidden`:** Prevents the extra content from showing before hovering.\n* **`opacity` transition:** Controls the fade-in effect for the hidden content.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)\n* **CSS Transforms:** [MDN Web Docs - CSS Transforms](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS Flexbox (for layout):** [CSS-Tricks Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2026,"title":"CSS Challenge:  Animated Expanding Card"}]
