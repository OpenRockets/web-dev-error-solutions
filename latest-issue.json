[{"body":"\nThis challenge involves creating an animated circular progress bar using only CSS.  We'll achieve this effect using CSS animations and transforms to create a visually appealing and dynamic progress indicator.  This example uses only CSS and no JavaScript.\n\n## Description of the Styling\n\nThe progress bar will be a circle with a colored segment representing the progress.  The segment will animate to fill the circle, simulating a loading or progress indicator. We'll achieve the circular shape using the `border-radius` property and the animated segment using a rotated pseudo-element (`::before`).  The animation will be smooth and visually engaging.\n\n\n## Full Code (CSS Only)\n\n```css\n.progress-ring {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  border: 10px solid #ddd; /* Light grey border */\n  position: relative;\n}\n\n.progress-ring::before {\n  content: \"\";\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 10px solid #4CAF50; /* Green progress color */\n  border-right-color: transparent; /* Make the progress segment transparent */\n  transform: rotate(0deg);\n  animation: progress-animation 2s linear forwards; /* Animate over 2 seconds */\n}\n\n@keyframes progress-animation {\n  to {\n    transform: rotate(360deg); /* Rotate 360 degrees to complete the circle */\n  }\n}\n\n/* Example to control progress: */\n.progress-ring.progress-75::before {\n    animation: progress-animation 2s linear forwards 0.75s; /* Adjust animation delay to simulate 75% progress */\n}\n```\n\nTo change the percentage simply adjust the `animation-delay` property in the class `.progress-75`.\n\nYou can use a class like `.progress-75` (or similar `.progress-x` where 'x' is the percentage) with the respective adjusted animation delay to easily control the progress visually.\n\n\n## Explanation\n\n* **`.progress-ring`**: This class styles the main circle, setting its dimensions, border-radius, and border.  `position: relative;` is crucial for absolute positioning of the pseudo-element.\n\n* **`.progress-ring::before`**: This pseudo-element creates the animated progress segment.  `border-right-color: transparent;` makes only the left part of the border visible, creating the progress segment.  The `transform: rotate()` property and the `progress-animation` keyframes animate the rotation of this segment.\n\n* **`@keyframes progress-animation`**: This defines the animation, smoothly rotating the segment to complete the circle. `linear` ensures a constant speed. `forwards` keeps the final state at the end of the animation.\n\n* **`progress-75` Class**: Demonstrates controlling the progress by adjusting the `animation-delay` property.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations)\n* **MDN Web Docs - `transform` property:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks - Animations:** [https://css-tricks.com/almanac/properties/a/animation/](https://css-tricks.com/almanac/properties/a/animation/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1533,"title":"CSS Challenge:  Animated Circular Progress Bar"}]
