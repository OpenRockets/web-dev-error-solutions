[{"body":"\nThis challenge involves creating an animated circular progress bar using Tailwind CSS. The progress bar will be a circle that fills up gradually, simulating a loading or progress indicator.  We'll achieve the animation using CSS and leverage Tailwind's utility classes for efficient styling.\n\n**Description of the Styling:**\n\nThe progress bar will be a circle with a background color and a colored fill that animates to represent the progress percentage. We'll use the `stroke-dasharray` and `stroke-dashoffset` CSS properties to control the length of the circle's perimeter that is filled.  Tailwind's responsive design capabilities will ensure the progress bar looks good on different screen sizes.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Animated Circular Progress Bar</title>\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n</head>\n<body class=\"bg-gray-100\">\n\n  <div class=\"container mx-auto p-8\">\n    <div class=\"w-48 h-48 relative\">\n      <svg class=\"w-full h-full\" viewBox=\"0 0 36 36\">\n        <circle cx=\"18\" cy=\"18\" r=\"15\" fill=\"transparent\" stroke=\"#e0e0e0\" stroke-width=\"4\"/>\n        <circle cx=\"18\" cy=\"18\" r=\"15\" fill=\"transparent\" stroke=\"#6366F1\" stroke-width=\"4\" stroke-dasharray=\"94.2477796\" stroke-dashoffset=\"94.2477796\" class=\"progress-bar\"/>\n      </svg>\n      <div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center text-lg font-bold\">75%</div>\n    </div>\n  </div>\n\n  <script>\n    const progressBar = document.querySelector('.progress-bar');\n    const progressPercentage = 75; // Change this value to adjust the progress\n\n    setTimeout(() => {\n      progressBar.style.strokeDashoffset = `calc(94.2477796 - (94.2477796 * ${progressPercentage / 100}))`;\n    }, 100); //Small delay for visual effect. Adjust as needed.\n  </script>\n\n</body>\n</html>\n```\n\n\n**Explanation:**\n\n* **HTML Structure:**  We create a simple SVG circle representing the progress bar.  A second circle on top acts as the fill.  The percentage is displayed in the center.\n* **Tailwind CSS:** Tailwind classes like `w-48`, `h-48`, `relative`, `absolute`, `bg-gray-100`, `text-center`, etc., are used for layout and styling.\n* **SVG attributes:** `stroke-dasharray` sets the total length of the circle's perimeter, and `stroke-dashoffset` controls how much of the circle is initially hidden. By adjusting `stroke-dashoffset` based on the `progressPercentage`, we animate the filling.\n* **JavaScript:**  A small JavaScript snippet calculates the correct `stroke-dashoffset` value based on the desired progress percentage and applies it to the fill circle. The `setTimeout` function adds a delay for a more noticeable animation.  You can adjust this value or remove it completely.\n* **Responsive Design:** Tailwind's responsive design features would allow you to easily adjust the size of the progress bar based on screen size if needed (e.g., using Tailwind's screen size modifiers like `md:w-64`).\n\n**Links to Resources to Learn More:**\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)\n* **SVG Tutorial:** [https://developer.mozilla.org/en-US/docs/Web/SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)\n* **CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2420,"title":"CSS Challenge:  Animated Circular Progress Bar with Tailwind CSS"}]
