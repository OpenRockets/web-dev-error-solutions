[{"body":"\nThis challenge involves creating an animated circular progress bar using pure CSS.  The bar will fill up gradually, simulating progress. We'll utilize CSS variables and animations for a clean and efficient solution.  No JavaScript will be required.\n\n\n## Description of the Styling\n\nThe progress bar will be a circle with a thicker ring representing the track. The inner ring will fill up to represent the percentage of progress.  The animation will smoothly fill this inner ring from 0% to a specified value (e.g., 75%).  We'll use CSS variables to easily control the color, size, and progress percentage.\n\n## Full Code (CSS Only)\n\n```css\n:root {\n  --progress-color: #007bff; /* Progress bar color */\n  --track-color: #e0e0e0;  /* Track color */\n  --progress-width: 10px; /* Width of the progress and track */\n  --size: 100px;          /* Size of the circle */\n  --progress-percentage: 75%; /* Percentage of progress */\n}\n\n.progress-ring {\n  width: var(--size);\n  height: var(--size);\n  position: relative;\n  display: inline-block;\n}\n\n.progress-ring svg {\n  transform: rotate(-90deg); /* Start at the top */\n}\n\n.progress-ring circle {\n  stroke-width: var(--progress-width);\n  stroke-linecap: round;\n  fill: transparent;\n  stroke-dasharray: calc(2 * 3.14159 * var(--size) / 2); /* Circumference */\n}\n\n.progress-ring .progress-track {\n  stroke: var(--track-color);\n}\n\n.progress-ring .progress-bar {\n  stroke: var(--progress-color);\n  stroke-dashoffset: calc(100% - var(--progress-percentage));\n  animation: fill-progress 2s linear forwards;\n}\n\n@keyframes fill-progress {\n  from {\n    stroke-dashoffset: calc(100% - var(--progress-percentage));\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n\n\n/* Example usage: */\n<div class=\"progress-ring\">\n  <svg width=\"100\" height=\"100\">\n    <circle class=\"progress-track\" cx=\"50\" cy=\"50\" r=\"45\"></circle>\n    <circle class=\"progress-bar\" cx=\"50\" cy=\"50\" r=\"45\"></circle>\n  </svg>\n</div>\n\n```\n\nYou'll need to embed this CSS within `<style>` tags or a linked stylesheet.  The provided HTML snippet demonstrates how to use the CSS.\n\n## Explanation\n\n* **CSS Variables:**  Using `var(--variable-name)` allows for easy customization of colors, sizes, and progress percentage.\n* **SVG for the Circle:** An SVG `<circle>` element is used to create the circular shape.  This is more efficient than trying to approximate a circle using borders or other techniques.\n* **`stroke-dasharray` and `stroke-dashoffset`:** These properties are key to creating the progress bar effect. `stroke-dasharray` sets the total length of the dash (the circumference), and `stroke-dashoffset` controls how much of the dash is hidden.\n* **Animation:** The `@keyframes` rule smoothly animates the `stroke-dashoffset` property, creating the filling effect.  `linear` ensures a consistent animation speed. `forwards` makes the animation stay at its final state.\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)\n* **MDN Web Docs - SVG `<circle>` element:** [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle)\n* **Understanding `stroke-dasharray` and `stroke-dashoffset`:** Search for tutorials on these CSS properties; many visual explanations are available.\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2455,"title":"CSS Challenge:  Animated Circular Progress Bar"}]
