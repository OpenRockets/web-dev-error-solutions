[{"body":"\nThis challenge focuses on creating a responsive navigation bar using CSS (specifically CSS3) that features subtle animation on hover and a smooth transition on smaller screens.  We'll build this without a CSS framework like Tailwind, focusing on core CSS principles.\n\n## Description of the Styling\n\nThe navigation bar will be positioned at the top of the page. It will contain a logo on the left and several navigation links on the right.  On larger screens, the links will be displayed inline.  On smaller screens (below a defined breakpoint), the links will be hidden behind a hamburger menu icon. Clicking the icon will toggle the visibility of the links with a smooth slide-down animation.  Each navigation link will have a subtle background highlight on hover.\n\n## Full Code\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Navigation Bar</title>\n<style>\nbody {\n  font-family: sans-serif;\n  margin: 0;\n}\n\nnav {\n  background-color: #333;\n  color: white;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.nav-links {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n}\n\n.nav-links li {\n  margin-left: 20px;\n}\n\n.nav-links a {\n  text-decoration: none;\n  color: white;\n  padding: 10px;\n  transition: background-color 0.3s ease;\n}\n\n.nav-links a:hover {\n  background-color: #555;\n}\n\n/* Responsive Styles */\n@media (max-width: 768px) {\n  .nav-links {\n    display: none;\n    flex-direction: column;\n    position: absolute;\n    top: 50px;\n    left: 0;\n    width: 100%;\n    background-color: #333;\n  }\n\n  .nav-links.active {\n    display: flex;\n    animation: slideDown 0.3s ease-in-out;\n  }\n\n  .nav-links li {\n    margin-left: 0;\n    width: 100%;\n  }\n\n  .nav-links a {\n    width: 100%;\n    text-align: center;\n  }\n\n  .toggle-button {\n    display: block;\n    cursor: pointer;\n  }\n\n  .toggle-button i {\n    font-size: 24px;\n  }\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n</head>\n<body>\n<nav>\n  <div class=\"logo\">My Logo</div>\n  <div class=\"toggle-button\" onclick=\"toggleNav()\">\n    <i class=\"fas fa-bars\"></i>\n  </div>\n  <ul class=\"nav-links\">\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">About</a></li>\n    <li><a href=\"#\">Services</a></li>\n    <li><a href=\"#\">Contact</a></li>\n  </ul>\n</nav>\n\n<script>\n  function toggleNav() {\n    document.querySelector('.nav-links').classList.toggle('active');\n  }\n</script>\n\n</body>\n</html>\n```\n\nRemember to include Font Awesome for the hamburger icon (`<i class=\"fas fa-bars\"></i>`).  You can link to it via a CDN.  For example:\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" integrity=\"sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n```\n\n\n## Explanation\n\nThe code uses media queries (`@media`) to adjust the layout based on screen size.  For smaller screens, the navigation links are hidden by default and shown using JavaScript. The `toggleClass` function adds and removes the `active` class, triggering the `slideDown` animation.  The hover effect is achieved using the `transition` property.\n\n\n## Links to Resources to Learn More\n\n* **CSS3 Tutorial:** [MDN Web Docs CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)\n* **Responsive Web Design:** [Google Web Fundamentals](https://developers.google.com/web/fundamentals/design-and-ux/responsive/)\n* **CSS Animations:** [CSS-Tricks Animations](https://css-tricks.com/almanac/properties/a/)\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2870,"title":"CSS Challenge:  Responsive Navigation Bar with Subtle Animations"}]
