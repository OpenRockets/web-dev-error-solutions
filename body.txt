
This challenge focuses on creating a responsive pricing table using CSS. The goal is to build a visually appealing and easily understandable table that adapts seamlessly to different screen sizes. We'll utilize CSS Grid for layout and some basic CSS for styling.


**Description of the Styling:**

The pricing table will consist of three plans: Basic, Pro, and Premium. Each plan will have its own card containing a title, a list of features, a price, and a call-to-action button.  The table will be responsive, adjusting its layout to columns or stacking vertically on smaller screens.  We aim for a clean, modern aesthetic.


**Full Code:**

```html
<!DOCTYPE html>
<html>
<head>
<title>Responsive Pricing Table</title>
<style>
body {
  font-family: sans-serif;
}

.pricing-table {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */
  grid-gap: 20px;
}

.plan {
  border: 1px solid #ccc;
  padding: 20px;
  text-align: center;
}

.plan h2 {
  margin-top: 0;
}

.plan ul {
  list-style: none;
  padding: 0;
}

.plan li {
  margin-bottom: 10px;
}

.plan .price {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 10px;
}

.plan button {
  background-color: #4CAF50;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .pricing-table {
    grid-template-columns: 1fr; /* Stack vertically */
  }
}
</style>
</head>
<body>

<div class="pricing-table">
  <div class="plan">
    <h2>Basic</h2>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
    </ul>
    <div class="price">$9.99/month</div>
    <button>Sign Up</button>
  </div>
  <div class="plan">
    <h2>Pro</h2>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
      <li>Feature 4</li>
      <li>Feature 5</li>
    </ul>
    <div class="price">$19.99/month</div>
    <button>Sign Up</button>
  </div>
  <div class="plan">
    <h2>Premium</h2>
    <ul>
      <li>Feature 1</li>
      <li>Feature 2</li>
      <li>Feature 3</li>
      <li>Feature 4</li>
      <li>Feature 5</li>
      <li>Feature 6</li>
    </ul>
    <div class="price">$29.99/month</div>
    <button>Sign Up</button>
  </div>
</div>

</body>
</html>
```

**Explanation:**

* **CSS Grid:** The `grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));` line is crucial for responsiveness.  `repeat(auto-fit, ...)` creates as many columns as fit, while `minmax(300px, 1fr)` ensures each column is at least 300px wide but also shares available space equally.
* **Media Query:** The `@media (max-width: 768px)` section changes the layout to a single column on smaller screens.
* **Basic CSS Styling:**  The rest of the CSS handles the visual aspects like borders, padding, colors, and fonts.


**Links to Resources to Learn More:**

* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)
* **Responsive Web Design:** [MDN Web Docs - Responsive Web Design](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Responsive_design)


Copyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.

