[{"body":"\nThis challenge focuses on creating a visually appealing card that expands when hovered over, revealing more information. We'll use CSS3 transitions and transforms to achieve the animation, without relying on JavaScript.  The style will be clean and modern.\n\n## Description of the Styling\n\nThe card will be a rectangular element with a subtle shadow.  On hover, it will smoothly expand horizontally, revealing additional text or content concealed behind the initial view. The expansion will be accompanied by a slight scaling effect for added visual interest.  We'll use a muted color palette for a calm and professional look.\n\n## Full Code (CSS Only)\n\n```css\n.card {\n  background-color: #f2f2f2;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  transition: transform 0.3s ease-in-out, width 0.3s ease-in-out; /* Smooth transition for transform and width */\n  width: 300px; /* Initial width */\n  overflow: hidden; /* Hide content beyond initial width */\n}\n\n.card:hover {\n  transform: scale(1.05); /* Slight scaling effect on hover */\n  width: 450px; /* Expanded width on hover */\n}\n\n.card-content {\n  /* Style the content within the card */\n  font-family: sans-serif;\n  line-height: 1.6;\n  color: #333;\n}\n\n.card-content p {\n    margin-bottom: 1em;\n}\n\n.card-content .hidden {\n  opacity: 0;\n  max-height: 0;\n  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out; /* Smooth transition for hidden content */\n  overflow: hidden;\n\n}\n\n.card:hover .hidden {\n  opacity: 1;\n  max-height: 200px;\n}\n```\n\n**HTML Structure (Example):**\n\n```html\n<div class=\"card\">\n  <div class=\"card-content\">\n    <h3>Card Title</h3>\n    <p>This is the initial content visible.</p>\n    <div class=\"hidden\">\n      <p>This extra content will only be visible on hover.</p>\n      <p>This is more hidden information.</p>\n    </div>\n  </div>\n</div>\n```\n\n\n## Explanation\n\n* **`transition` property:** This is key for the animation. It specifies that the `transform` and `width` properties should smoothly change over 0.3 seconds using an ease-in-out timing function.\n* **`transform: scale(1.05)`:**  This slightly scales up the card on hover, adding a subtle visual cue.\n* **`width` change:** The `width` property changes on hover, causing the horizontal expansion.\n* **`overflow: hidden`:** This prevents the hidden content from spilling out of the initial card bounds until it expands on hover.  It is used on both the `.card` and `.hidden` class.\n* **`max-height` and `opacity` on `.hidden`:** These provide the smooth reveal effect.\n\n## Resources to Learn More\n\n* **MDN Web Docs (CSS Transitions):** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs (CSS Transforms):** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks (Transitions and Transforms):**  (Search \"CSS Transitions and Transforms\" on CSS-Tricks for various tutorials)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2404,"title":"CSS Challenge:  Animated Expanding Card"}]
