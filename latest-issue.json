[{"body":"\nThis challenge involves creating a clean and responsive pricing table using CSS.  We'll focus on a straightforward design to highlight fundamental CSS concepts.  This example uses standard CSS3; adapting it to Tailwind CSS is a straightforward exercise left for the reader (explained briefly below).\n\n## Description of the Styling\n\nThe pricing table will consist of three columns representing different pricing plans (Basic, Pro, and Premium). Each column will have a title, a list of features, a price, and a call-to-action button.  The design will emphasize visual separation between plans using borders and padding.  We'll aim for a clean, modern look with a responsive layout that adapts to different screen sizes.\n\n## Full Code (CSS3)\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Pricing Table</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.pricing-table {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */\n  grid-gap: 20px;\n}\n\n.plan {\n  border: 1px solid #ccc;\n  padding: 20px;\n  text-align: center;\n}\n\n.plan h2 {\n  margin-top: 0;\n}\n\n.plan ul {\n  list-style: none;\n  padding: 0;\n}\n\n.plan li {\n  margin-bottom: 10px;\n}\n\n.plan .price {\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.plan button {\n  background-color: #4CAF50;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 1em;\n  cursor: pointer;\n}\n</style>\n</head>\n<body>\n\n<div class=\"pricing-table\">\n  <div class=\"plan\">\n    <h2>Basic</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n    </ul>\n    <p class=\"price\">$9/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"plan\">\n    <h2>Pro</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n    </ul>\n    <p class=\"price\">$19/month</p>\n    <button>Sign Up</button>\n  </div>\n  <div class=\"plan\">\n    <h2>Premium</h2>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n    </ul>\n    <p class=\"price\">$29/month</p>\n    <button>Sign Up</button>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n## Explanation\n\nThe code utilizes CSS Grid for a responsive layout.  `grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));` ensures the columns adapt to different screen sizes.  Classes like `.plan` style individual pricing plans, while other classes target specific elements within each plan (e.g., `.price`, `button`).  The use of semantic HTML elements like `ul` and `li` improves accessibility.\n\n## Tailwind CSS Adaptation\n\nAdapting this to Tailwind CSS would involve replacing the custom CSS classes with corresponding Tailwind utility classes.  For example:\n\n* `.pricing-table` could become  `grid grid-cols-1 md:grid-cols-3 gap-4`.\n* `.plan` could become `border border-gray-300 p-4 text-center`.\n* `.price` could become `text-xl font-bold mb-2`.\n* `.plan h2` could become `text-2xl font-semibold mb-2`.\n* The button styling would be achieved using Tailwind's button utilities.\n\n\n## Resources to Learn More\n\n* **CSS Grid Layout:** [MDN Web Docs - CSS Grid Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\n* **CSS Basics:** [MDN Web Docs - CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)\n* **Tailwind CSS:** [Tailwind CSS Documentation](https://tailwindcss.com/docs)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1996,"title":"CSS Challenge: Recreate a Simple Pricing Table"}]
