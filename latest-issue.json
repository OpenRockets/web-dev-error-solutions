[{"body":"\nThis challenge involves creating a 3D rotating cube using only CSS.  We'll achieve this effect using transformations and animations without any JavaScript. This example utilizes CSS3 properties.\n\n**Description of the Styling:**\n\nThe cube is constructed using six divs, each representing a face.  These are positioned absolutely within a parent container.  `transform-style: preserve-3d;` on the parent is crucial; it ensures that child elements are rendered in 3D space.  Each face is rotated and translated to its correct position on the cube.  Keyframes animation rotates the cube around the Y-axis continuously.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>3D Rotating Cube</title>\n<style>\n.cube {\n  width: 200px;\n  height: 200px;\n  perspective: 800px; /* Adjust for perspective effect */\n  transform-style: preserve-3d;\n  animation: rotation 10s linear infinite;\n}\n\n.face {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  background-color: rgba(255,0,0,0.7); /*Example color, change as needed*/\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n  color: white;\n  backface-visibility: hidden; /* Prevents back faces from showing */\n}\n\n.front {\n  transform: translateZ(50px);\n}\n\n.back {\n  transform: translateZ(-50px) rotateY(180deg);\n}\n\n.top {\n  transform: translateY(-50px) rotateX(90deg);\n}\n\n.bottom {\n  transform: translateY(50px) rotateX(-90deg);\n}\n\n.left {\n  transform: translateX(-50px) rotateY(-90deg);\n}\n\n.right {\n  transform: translateX(50px) rotateY(90deg);\n}\n\n@keyframes rotation {\n  from {\n    transform: rotateY(0deg);\n  }\n  to {\n    transform: rotateY(360deg);\n  }\n}\n</style>\n</head>\n<body>\n\n<div class=\"cube\">\n  <div class=\"face front\">Front</div>\n  <div class=\"face back\">Back</div>\n  <div class=\"face top\">Top</div>\n  <div class=\"face bottom\">Bottom</div>\n  <div class=\"face left\">Left</div>\n  <div class=\"face right\">Right</div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n1. **`perspective`:**  This property on the `.cube` creates the 3D viewing perspective.  Adjust the value to change the depth effect.\n2. **`transform-style: preserve-3d;`:** This is crucial. It tells the browser to render the child elements (`faces`) in 3D space.\n3. **`transform` on each face:** Each face is translated and rotated to its correct position within the 3D space of the cube.\n4. **`backface-visibility: hidden;`:**  This prevents the back faces of the cube from being visible when rotated, creating a more realistic look.\n5. **`@keyframes rotation`:** This defines the animation that rotates the cube continuously.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **MDN Web Docs - CSS Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n* **CSS-Tricks - 3D Transforms:** (Search for \"CSS 3D Transforms\" on CSS-Tricks for numerous tutorials)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1537,"title":"CSS Challenge:  3D Rotating Cube"}]
