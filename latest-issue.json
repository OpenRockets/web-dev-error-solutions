[{"body":"\nThis challenge involves creating a card that expands smoothly when hovered over, revealing more content. We'll use CSS3 transitions and transforms to achieve this effect.  No JavaScript is required.\n\n\n## Description of the Styling\n\nThe card will have a basic layout: a header, a main content area, and a button.  On hover, the card will increase in height, revealing the initially hidden content.  We'll use a smooth transition to make the animation look pleasing.  The styling will incorporate a subtle shadow to give the card depth.\n\n\n## Full Code (CSS only)\n\n```css\n.card {\n  width: 300px;\n  background-color: #f2f2f2;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Hide content initially outside of the card */\n  transition: height 0.3s ease-in-out; /* Smooth transition for height change */\n}\n\n.card-header {\n  background-color: #4CAF50;\n  color: white;\n  padding: 15px;\n  text-align: center;\n}\n\n.card-content {\n  padding: 15px;\n  height: 0; /* Initially hidden */\n  overflow: hidden; /* Hide the overflow when initially collapsed */\n  transition: height 0.3s ease-in-out; /* Smooth transition for height change */\n}\n\n.card:hover .card-content {\n  height: 150px; /* Height on hover */\n}\n\n.card-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n```\n\nTo use this CSS, you'll need to structure your HTML like this:\n\n```html\n<div class=\"card\">\n  <div class=\"card-header\">Card Title</div>\n  <div class=\"card-content\">\n    <p>This is the content that will be revealed on hover.</p>\n    <button class=\"card-button\">Learn More</button>\n  </div>\n</div>\n```\n\n\n## Explanation\n\n* **`transition: height 0.3s ease-in-out;`**: This line is crucial for the animation. It tells the browser to smoothly transition the `height` property over 0.3 seconds using an \"ease-in-out\" timing function (for a smooth acceleration and deceleration).  This is applied to both the `.card` and `.card-content` classes to coordinate the expansion.\n\n* **`height: 0;` and `overflow: hidden;`**:  These are used on the `.card-content` to initially hide the content. The `overflow: hidden` prevents any content from spilling out during the transition.\n\n* **`.card:hover .card-content { height: 150px; }`**: This selector targets the `.card-content` element *only* when the parent `.card` element is hovered.  It sets the height to 150px, triggering the animation.  Adjust the `150px` value to control the final height of the expanded card.\n\n* **`overflow: hidden;` on `.card`**: This prevents any content from overflowing the card boundaries during expansion.\n\n\n## Links to Resources to Learn More\n\n* **MDN Web Docs - CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **MDN Web Docs - CSS Transforms:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transform](https://developer.mozilla.org/en-US/docs/Web/CSS/transform)\n* **CSS-Tricks (general CSS resources):** [https://css-tricks.com/](https://css-tricks.com/)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2135,"title":"CSS Challenge:  Animated Expanding Card"}]
