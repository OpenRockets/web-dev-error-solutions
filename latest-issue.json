[{"body":"\nThis challenge involves creating a multi-level nested accordion using CSS.  The accordion should allow users to expand and collapse sections, with nested sections also expanding and collapsing independently. We'll use pure CSS for styling, avoiding JavaScript.  This example leverages the power of the `:target` pseudo-class and sibling selectors for a clean and efficient solution.\n\n\n**Description of the Styling:**\n\nThe accordion will have a clean, modern look. Each section will have a heading that acts as the toggle.  When a section is expanded, its content will smoothly slide down.  Nested accordions will indent visually to clearly show the hierarchy.  We'll use a simple color palette for readability.\n\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Nested Accordion</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.accordion {\n  width: 500px;\n  border: 1px solid #ccc;\n}\n\n.accordion-item {\n  border-bottom: 1px solid #ccc;\n}\n\n.accordion-title {\n  background-color: #f0f0f0;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.accordion-title:hover {\n  background-color: #ddd;\n}\n\n.accordion-content {\n  padding: 10px;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease-out;\n}\n\n.accordion-item.active .accordion-content {\n  max-height: 500px; /* Adjust as needed */\n}\n\n.nested-accordion {\n  margin-left: 20px;\n}\n</style>\n</head>\n<body>\n\n<div class=\"accordion\" id=\"accordion1\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-title\">Section 1</h2>\n    <div class=\"accordion-content\">\n      <p>Content for Section 1.</p>\n      <div class=\"accordion nested-accordion\" id=\"accordion2\">\n        <div class=\"accordion-item\">\n          <h3 class=\"accordion-title\">Nested Section 1.1</h3>\n          <div class=\"accordion-content\">\n            <p>Content for Nested Section 1.1.</p>\n          </div>\n        </div>\n        <div class=\"accordion-item\">\n          <h3 class=\"accordion-title\">Nested Section 1.2</h3>\n          <div class=\"accordion-content\">\n            <p>Content for Nested Section 1.2.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-title\">Section 2</h2>\n    <div class=\"accordion-content\">\n      <p>Content for Section 2.</p>\n    </div>\n  </div>\n</div>\n\n<script>\nconst titles = document.querySelectorAll('.accordion-title');\n\ntitles.forEach(title => {\n  title.addEventListener('click', function() {\n    this.parentNode.classList.toggle('active');\n  });\n});\n\n</script>\n\n\n</body>\n</html>\n```\n\n**Explanation:**\n\n* The HTML structures the accordion using nested `div` elements.  Each section is an `accordion-item` containing a title (`accordion-title`) and content (`accordion-content`).\n* The CSS uses `max-height` and `transition` to create the smooth expanding and collapsing effect. The `:target` pseudo-class is not directly used here; a simpler JavaScript solution is implemented for the toggling functionality.\n* The JavaScript adds event listeners to the titles, toggling the `active` class on the parent `accordion-item` when clicked. The `active` class then controls the `max-height` of the `accordion-content`.\n* The `nested-accordion` class provides visual indentation for nested sections.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS Pseudo-classes:** [MDN Web Docs - CSS Pseudo-classes](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes)\n* **JavaScript Event Listeners:** [MDN Web Docs - AddEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2771,"title":"CSS Challenge:  Multi-Level Nested Accordion"}]
