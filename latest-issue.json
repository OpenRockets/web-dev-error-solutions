[{"body":"\nThis challenge involves creating a responsive pricing table using CSS.  We'll build a table with three pricing plans (Basic, Pro, and Premium) that adapts gracefully to different screen sizes.  We will use plain CSS for this example, focusing on flexbox for layout and media queries for responsiveness.\n\n**Description of the Styling:**\n\nThe pricing table will feature:\n\n* **Three columns:** One for each pricing plan (Basic, Pro, Premium).\n* **Clear visual separation:**  Each plan will have its own distinct background color and border.\n* **Responsive design:**  The table should stack vertically on smaller screens.\n* **Clean typography:**  Clear and easy-to-read text for plan names, features, and prices.\n\n**Full Code:**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Responsive Pricing Table</title>\n<style>\nbody {\n  font-family: sans-serif;\n}\n\n.pricing-table {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.pricing-plan {\n  width: 300px;\n  margin: 20px;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  text-align: center;\n}\n\n.pricing-plan h2 {\n  margin-bottom: 10px;\n}\n\n.pricing-plan .price {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.pricing-plan ul {\n  list-style: none;\n  padding: 0;\n}\n\n.pricing-plan li {\n  margin-bottom: 5px;\n}\n\n/* Media Query for smaller screens */\n@media (max-width: 768px) {\n  .pricing-plan {\n    width: 100%;\n  }\n}\n\n/* Style variations for each plan */\n.basic {\n  background-color: #f0f0f0;\n}\n\n.pro {\n  background-color: #e0e0e0;\n}\n\n.premium {\n  background-color: #d0d0d0;\n}\n</style>\n</head>\n<body>\n\n<div class=\"pricing-table\">\n  <div class=\"pricing-plan basic\">\n    <h2>Basic</h2>\n    <p class=\"price\">$9.99/month</p>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n    </ul>\n  </div>\n  <div class=\"pricing-plan pro\">\n    <h2>Pro</h2>\n    <p class=\"price\">$19.99/month</p>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n    </ul>\n  </div>\n  <div class=\"pricing-plan premium\">\n    <h2>Premium</h2>\n    <p class=\"price\">$29.99/month</p>\n    <ul>\n      <li>Feature 1</li>\n      <li>Feature 2</li>\n      <li>Feature 3</li>\n      <li>Feature 4</li>\n      <li>Feature 5</li>\n      <li>Feature 6</li>\n    </ul>\n  </div>\n</div>\n\n</body>\n</html>\n```\n\n**Explanation:**\n\nThe code uses flexbox to arrange the pricing plans horizontally.  The `flex-wrap: wrap;` property ensures that the plans wrap onto the next line if there isn't enough horizontal space.  The `@media` query adjusts the width of each plan to 100% on smaller screens, making the table stack vertically.  Different background colors are used to visually distinguish the plans.\n\n**Links to Resources to Learn More:**\n\n* **CSS Flexbox:** [MDN Web Docs - CSS Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox)\n* **CSS Media Queries:** [MDN Web Docs - CSS Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2194,"title":"CSS Challenge: Responsive Pricing Table"}]
