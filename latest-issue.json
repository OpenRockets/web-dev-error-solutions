[{"body":"\nThis challenge involves creating a multi-level nested accordion using CSS.  The accordion will allow users to expand and collapse sections, with sub-sections nested within the main sections.  We'll achieve this using only CSS, leveraging the power of the `:target` pseudo-class and sibling selectors. No JavaScript will be used.\n\n\n**Description of the Styling:**\n\nThe accordion will have a clean and modern look.  Each section will have a heading that, when clicked, expands to reveal its content (and any nested sub-sections).  The expanded sections will smoothly slide down. We'll use a subtle background color to differentiate sections and a clear visual cue (e.g., a plus/minus icon or arrow) to indicate expansion/collapse.  We'll style it to be responsive, adapting well to different screen sizes.\n\n\n**Full Code (CSS only):**\n\n```css\nbody {\n  font-family: sans-serif;\n}\n\n.accordion {\n  width: 80%;\n  margin: 20px auto;\n}\n\n.accordion-item {\n  border: 1px solid #ccc;\n  margin-bottom: 10px;\n  overflow: hidden; /* Hide content initially */\n}\n\n.accordion-header {\n  background-color: #f0f0f0;\n  padding: 15px;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.accordion-header::before {\n  content: \"+\"; /* Plus sign initially */\n  font-weight: bold;\n  transition: transform 0.3s ease; /* Smooth transition for icon */\n}\n\n.accordion-header:target::before {\n  content: \"-\"; /* Minus sign when expanded */\n  transform: rotate(45deg); /* Rotate the plus sign to an \"x\" */\n}\n\n.accordion-content {\n  padding: 15px;\n  max-height: 0; /* Initially collapsed */\n  overflow: hidden;\n  transition: max-height 0.3s ease; /* Smooth transition for height */\n}\n\n.accordion-header:target ~ .accordion-content {\n  max-height: 200px; /* Adjust as needed */\n}\n\n/* Nested Accordion Styling */\n.nested-accordion {\n    margin-left: 20px;\n}\n\n```\n\n**HTML Structure (Example):**\n\n```html\n<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <a class=\"accordion-header\" href=\"#section1\">Section 1</a>\n    <div class=\"accordion-content\">\n      Content for Section 1.\n\n      <div class=\"nested-accordion\">\n        <div class=\"accordion-item\">\n          <a class=\"accordion-header\" href=\"#section1-1\">Subsection 1.1</a>\n          <div class=\"accordion-content\">Content for Subsection 1.1</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <a class=\"accordion-header\" href=\"#section2\">Section 2</a>\n    <div class=\"accordion-content\">Content for Section 2.</div>\n  </div>\n</div>\n```\n\n\n**Explanation:**\n\nThis code utilizes CSS's `:target` pseudo-class to control the visibility of the accordion content.  When a header link is clicked, the browser navigates to the corresponding `id` (e.g., `#section1`), making that header the target.  The `:target ~ .accordion-content` selector then targets the sibling content div and changes its `max-height` property to reveal the content.  The plus/minus icon is toggled using the `::before` pseudo-element and CSS transforms.  The `transition` property ensures smooth animations. The nested accordion works by applying the same CSS rules recursively to the inner accordion elements.\n\n\n**Links to Resources to Learn More:**\n\n* **MDN Web Docs CSS Selectors:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n* **MDN Web Docs :target Pseudo-class:** [https://developer.mozilla.org/en-US/docs/Web/CSS/:target](https://developer.mozilla.org/en-US/docs/Web/CSS/:target)\n* **CSS Transitions:** [https://developer.mozilla.org/en-US/docs/Web/CSS/transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2330,"title":"CSS Challenge:  Multi-level Nested Accordion"}]
