[{"body":"\nThis challenge involves creating an animated card that expands to reveal more content when clicked. We'll use Tailwind CSS for rapid styling and efficient class-based development.  The animation will be subtle and user-friendly.\n\n**Description of the Styling:**\n\nThe card will initially appear compact, displaying a title and a small image.  Upon clicking, it will smoothly expand vertically, revealing a longer description and potentially more details.  We'll use Tailwind's utility classes for transitions and animations to achieve a polished effect. The expanded state will be visually distinct from the collapsed state, perhaps using different padding, spacing, and potentially even a background color change.\n\n**Full Code:**\n\n```html\n<div class=\"max-w-sm rounded overflow-hidden shadow-lg cursor-pointer transition duration-500 ease-in-out\" \n     onclick=\"this.classList.toggle('expanded')\">\n  <img class=\"w-full\" src=\"https://via.placeholder.com/350x150\" alt=\"Card Image\">\n  <div class=\"px-6 py-4\">\n    <div class=\"font-bold text-xl mb-2\">Card Title</div>\n    <p class=\"text-gray-700 text-base\">\n      This is a short description of the card.\n    </p>\n  </div>\n  <div class=\"px-6 pt-4 pb-2 hidden\" id=\"expanded-content\">\n    <p class=\"text-gray-700 text-base\">\n      This is the expanded content of the card.  You can add more details here. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec enim nec libero aliquet ultrices.\n    </p>\n  </div>\n</div>\n\n\n<style>\n.expanded {\n  max-height: 500px; /* Adjust as needed */\n  /* Add other styles for the expanded state, if required */\n}\n</style>\n```\n\n**Explanation:**\n\n* **`max-w-sm rounded overflow-hidden shadow-lg cursor-pointer`**: These Tailwind classes provide basic styling: maximum width, rounded corners, hidden overflow, shadow, and a cursor that indicates it's clickable.\n* **`transition duration-500 ease-in-out`**: This applies a smooth transition with a duration of 500 milliseconds and an ease-in-out timing function.\n* **`onclick=\"this.classList.toggle('expanded')\"`**: This JavaScript code toggles the `expanded` class on the card when clicked.  This class is defined in the `<style>` tag.\n* **`.hidden`**: This Tailwind class initially hides the expanded content.\n* **`#expanded-content`**:  This div holds the content to be revealed upon expansion.\n* **The Custom CSS**: The `max-height` property in the `.expanded` class controls the maximum height of the expanded card.  You can adjust this value as needed.  Additional styles can be added here to further differentiate the expanded and collapsed states.\n\n**Links to Resources to Learn More:**\n\n* **Tailwind CSS Documentation:** [https://tailwindcss.com/docs](https://tailwindcss.com/docs)  - The official Tailwind CSS documentation is an excellent resource for learning about all its features and utility classes.\n* **CSS Transitions and Animations:** [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions) and [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations) -  Learn more about creating smooth animations and transitions in CSS.\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":1704,"title":"CSS Challenge:  Animated Expanding Card with Tailwind CSS"}]
