[{"body":"\nThis challenge focuses on creating a visually appealing multi-level nested list that utilizes an accordion effect for expanding and collapsing sub-lists.  We'll achieve this using CSS3, focusing on clean and maintainable code.  No JavaScript will be used.\n\n\n**Description of the Styling:**\n\nThe styling aims for a modern, clean look.  Each list item will have a clickable header that reveals its sub-list.  Sub-lists will be hidden by default and smoothly slide down on click.  We'll use a subtle background color change to indicate the active section.  We will also include appropriate padding and spacing for readability.\n\n\n**Full Code (CSS):**\n\n```css\n.accordion {\n  width: 80%;\n  margin: 20px auto;\n}\n\n.accordion-item {\n  background-color: #f2f2f2;\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 5px;\n  overflow: hidden; /* Hide the sub-list initially */\n}\n\n.accordion-header {\n  padding: 15px;\n  cursor: pointer;\n  background-color: #fff;\n  transition: background-color 0.3s ease; /* Smooth transition for background change */\n}\n\n.accordion-header:hover {\n  background-color: #e0e0e0;\n}\n\n.accordion-content {\n  padding: 15px;\n  max-height: 0; /* Initially hide sub-list */\n  overflow: hidden;\n  transition: max-height 0.3s ease; /* Smooth transition for height change */\n}\n\n.accordion-item.active .accordion-content {\n  max-height: 500px; /* Adjust as needed */\n}\n\n.accordion-item.active .accordion-header {\n  background-color: #d0d0d0; /* Indicate active section */\n}\n\n\n/* For nested lists (optional) */\n.accordion-item ol {\n    padding-left: 20px;\n    list-style-type: lower-alpha;\n}\n```\n\n**HTML Structure (example):**\n\n```html\n<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <div class=\"accordion-header\">Item 1</div>\n    <div class=\"accordion-content\">\n      <p>Content for Item 1</p>\n      <ol>\n          <li>Sub-item 1a</li>\n          <li>Sub-item 1b</li>\n      </ol>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <div class=\"accordion-header\">Item 2</div>\n    <div class=\"accordion-content\">\n      <p>Content for Item 2</p>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <div class=\"accordion-header\">Item 3</div>\n    <div class=\"accordion-content\">\n      <p>Content for Item 3</p>\n       <ol>\n          <li>Sub-item 3a</li>\n          <li>Sub-item 3b</li>\n          <li>Sub-item 3c</li>\n          <ol>\n              <li>Sub-Sub-item 3c1</li>\n          </ol>\n      </ol>\n    </div>\n  </div>\n</div>\n\n<script>\n// JavaScript to add active class on click (needed because CSS alone can't handle this click event)\nconst accordionItems = document.querySelectorAll('.accordion-item');\naccordionItems.forEach(item => {\n  item.addEventListener('click', () => {\n    item.classList.toggle('active');\n  });\n});\n</script>\n```\n\n**Explanation:**\n\nThe CSS uses `max-height` and transitions to create the accordion effect.  The `active` class, toggled by JavaScript on click, controls the `max-height` of the `.accordion-content` to show or hide the sub-list.  The `overflow: hidden;` ensures that the content remains hidden until the `max-height` is increased.  Hover effects and background color changes add visual feedback. Note that even though we are aiming for a CSS-only solution, a small amount of JavaScript is required for handling the click events to toggle the `active` class.\n\n\n**Links to Resources to Learn More:**\n\n* **CSS Transitions:** [MDN Web Docs - CSS Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition)\n* **CSS Selectors:** [MDN Web Docs - CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n* **JavaScript Event Listeners:** [MDN Web Docs - EventTarget.addEventListener()](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\n\n\nCopyrights (c) OpenRockets Open-source Network. Free to use, copy, share, edit or publish.\n","number":2268,"title":"CSS Challenge:  Multi-level Nested List with Stylish Accordion"}]
